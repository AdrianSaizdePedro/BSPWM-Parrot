.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "kitty.conf" 5 "Jun 22, 2024" "0.35.2" "kitty"
.SH Name
kitty.conf \- Configuration file for kitty
.SH Overview
.sp
\fIkitty\fP is highly customizable, everything from keyboard shortcuts, to rendering
frames\-per\-second. See below for an overview of all customization possibilities.
.sp
You can open the config file within \fIkitty\fP by pressing \fI\%ctrl+shift+f2\fP
(\fB⌘+,\fP on macOS). A \fBkitty.conf\fP with commented default
configurations and descriptions will be created if the file does not exist.
You can reload the config file within \fIkitty\fP by pressing
\fI\%ctrl+shift+f5\fP (\fB⌃+⌘+,\fP on macOS) or sending \fIkitty\fP the
\fBSIGUSR1\fP signal with \fBkill \-SIGUSR1 $KITTY_PID\fP\&. You can also display the
current configuration by pressing \fI\%ctrl+shift+f6\fP (\fB⌥+⌘+,\fP on macOS).
.sp
\fIkitty\fP looks for a config file in the OS config directories (usually
\fB~/.config/kitty/kitty.conf\fP) but you can pass a specific path via the
\X'tty: link #cmdoption-kitty-config'\fI\%kitty \-\-config\fP\X'tty: link' option or use the \X'tty: link #envvar-KITTY_CONFIG_DIRECTORY'\fI\%KITTY_CONFIG_DIRECTORY\fP\X'tty: link'
environment variable. See \X'tty: link #cmdoption-kitty-config'\fI\%kitty \-\-config\fP\X'tty: link' for full details.
.sp
\fBComments\fP can be added to the config file as lines starting with the \fB#\fP
character. This works only if the \fB#\fP character is the first character in the
line.
.sp
\fBLines can be split\fP by starting the next line with the \fB\e\fP character.
All leading whitespace and the \fB\e\fP character are removed.
.sp
You can \fBinclude secondary config files\fP via the \fBinclude\fP directive. If
you use a relative path for \fBinclude\fP, it is resolved with respect to the
location of the current config file. Note that environment variables are
expanded, so \fB${USER}.conf\fP becomes \fBname.conf\fP if
\fBUSER=name\fP\&. A special environment variable \X'tty: link #envvar-KITTY_OS'\fI\%KITTY_OS\fP\X'tty: link' is available,
to detect the operating system. It is \fBlinux\fP, \fBmacos\fP or \fBbsd\fP\&.
Also, you can use \fBglobinclude\fP to include files
matching a shell glob pattern and \fBenvinclude\fP to include configuration
from environment variables. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
include other.conf
# Include *.conf files from all subdirs of kitty.d inside the kitty config dir
globinclude kitty.d/**/*.conf
# Include the *contents* of all env vars starting with KITTY_CONF_
envinclude KITTY_CONF_*
.EE
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Syntax highlighting for \fBkitty.conf\fP in vim is available via
\X'tty: link https://github.com/fladson/vim-kitty'\fI\%vim\-kitty\fP\X'tty: link'\&.
.UNINDENT
.UNINDENT
.SH Fonts
.sp
kitty has very powerful font management. You can configure individual font faces
and even specify special fonts for particular characters.
.INDENT 0.0
.TP
.B font_family, bold_font, italic_font, bold_italic_font
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_family      monospace
bold_font        auto
italic_font      auto
bold_italic_font auto
.EE
.UNINDENT
.UNINDENT
.sp
You can specify different fonts for the bold/italic/bold\-italic variants.
To get a full list of supported fonts use the \fBkitty +list\-fonts\fP command.
By default they are derived automatically, by the OSes font system. When
\fI\%bold_font\fP or \fI\%bold_italic_font\fP is set to \fBauto\fP on macOS, the
priority of bold fonts is semi\-bold, bold, heavy. Setting them manually is
useful for font families that have many weight variants like Book, Medium,
Thick, etc.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_family      Operator Mono Book
bold_font        Operator Mono Medium
italic_font      Operator Mono Book Italic
bold_italic_font Operator Mono Medium Italic
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B font_size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_size 11.0
.EE
.UNINDENT
.UNINDENT
.sp
Font size (in pts).
.INDENT 0.0
.TP
.B force_ltr
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
force_ltr no
.EE
.UNINDENT
.UNINDENT
.sp
kitty does not support BIDI (bidirectional text), however, for RTL scripts,
words are automatically displayed in RTL. That is to say, in an RTL script, the
words \(dqHELLO WORLD\(dq display in kitty as \(dqWORLD HELLO\(dq, and if you try to select
a substring of an RTL\-shaped string, you will get the character that would be
there had the string been LTR. For example, assuming the Hebrew word
ירושלים, selecting the character that on the screen appears to be ם actually
writes into the selection buffer the character י. kitty\(aqs default behavior is
useful in conjunction with a filter to reverse the word order, however, if you
wish to manipulate RTL glyphs, it can be very challenging to work with, so this
option is provided to turn it off. Furthermore, this option can be used with the
command line program \X'tty: link https://github.com/fribidi/fribidi#executable'\fI\%GNU FriBidi\fP\X'tty: link' to get BIDI support, because it
will force kitty to always treat the text as LTR, which FriBidi expects for
terminals.
.INDENT 0.0
.TP
.B symbol_map
.UNINDENT
.sp
Has no default values. Example values are shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
symbol_map U+E0A0\-U+E0A3,U+E0C0\-U+E0C7 PowerlineSymbols
.EE
.UNINDENT
.UNINDENT
.sp
Map the specified Unicode codepoints to a particular font. Useful if you need
special rendering for some symbols, such as for Powerline. Avoids the need for
patched fonts. Each Unicode code point is specified in the form \fBU+<code
point in hexadecimal>\fP\&. You can specify multiple code points, separated by
commas and ranges separated by hyphens. This option can be specified multiple
times. The syntax is:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
symbol_map codepoints Font Family Name
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B narrow_symbols
.UNINDENT
.sp
Has no default values. Example values are shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
narrow_symbols U+E0A0\-U+E0A3,U+E0C0\-U+E0C7 1
.EE
.UNINDENT
.UNINDENT
.sp
Usually, for Private Use Unicode characters and some symbol/dingbat characters,
if the character is followed by one or more spaces, kitty will use those extra
cells to render the character larger, if the character in the font has a wide
aspect ratio. Using this option you can force kitty to restrict the specified
code points to render in the specified number of cells (defaulting to one cell).
This option can be specified multiple times. The syntax is:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
narrow_symbols codepoints [optionally the number of cells]
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B disable_ligatures
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
disable_ligatures never
.EE
.UNINDENT
.UNINDENT
.sp
Choose how you want to handle multi\-character ligatures. The default is to
always render them. You can tell kitty to not render them when the cursor is
over them by using \fBcursor\fP to make editing easier, or have kitty never
render them at all by using \fBalways\fP, if you don\(aqt like them. The ligature
strategy can be set per\-window either using the kitty remote control facility
or by defining shortcuts for it in \fBkitty.conf\fP, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map alt+1 disable_ligatures_in active always
map alt+2 disable_ligatures_in all never
map alt+3 disable_ligatures_in tab cursor
.EE
.UNINDENT
.UNINDENT
.sp
Note that this refers to programming ligatures, typically implemented using the
\fBcalt\fP OpenType feature. For disabling general ligatures, use the
\fI\%font_features\fP option.
.INDENT 0.0
.TP
.B font_features
.UNINDENT
.sp
Has no default values. Example values are shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_features none
.EE
.UNINDENT
.UNINDENT
.sp
Choose exactly which OpenType features to enable or disable. This is useful as
some fonts might have features worthwhile in a terminal. For example, Fira Code
includes a discretionary feature, \fBzero\fP, which in that font changes the
appearance of the zero (0), to make it more easily distinguishable from Ø. Fira
Code also includes other discretionary features known as Stylistic Sets which
have the tags \fBss01\fP through \fBss20\fP\&.
.sp
For the exact syntax to use for individual features, see the
\X'tty: link https://harfbuzz.github.io/harfbuzz-hb-common.html#hb-feature-from-string'\fI\%HarfBuzz documentation\fP\X'tty: link'\&.
.sp
Note that this code is indexed by PostScript name, and not the font family. This
allows you to define very precise feature settings; e.g. you can disable a
feature in the italic font but not in the regular font.
.sp
On Linux, font features are first read from the FontConfig database and then
this option is applied, so they can be configured in a single, central place.
.sp
To get the PostScript name for a font, use \fBkitty +list\-fonts \-\-psnames\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitty +list\-fonts \-\-psnames | grep Fira
Fira Code
Fira Code Bold (FiraCode\-Bold)
Fira Code Light (FiraCode\-Light)
Fira Code Medium (FiraCode\-Medium)
Fira Code Regular (FiraCode\-Regular)
Fira Code Retina (FiraCode\-Retina)
.EE
.UNINDENT
.UNINDENT
.sp
The part in brackets is the PostScript name.
.sp
Enable alternate zero and oldstyle numerals:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_features FiraCode\-Retina +zero +onum
.EE
.UNINDENT
.UNINDENT
.sp
Enable only alternate zero in the bold font:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_features FiraCode\-Bold +zero
.EE
.UNINDENT
.UNINDENT
.sp
Disable the normal ligatures, but keep the \fBcalt\fP feature which (in this
font) breaks up monotony:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_features TT2020StyleB\-Regular \-liga +calt
.EE
.UNINDENT
.UNINDENT
.sp
In conjunction with \fI\%force_ltr\fP, you may want to disable Arabic shaping
entirely, and only look at their isolated forms if they show up in a document.
You can do this with e.g.:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
font_features UnifontMedium +isol \-medi \-fina \-init
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B modify_font
.UNINDENT
.sp
Modify font characteristics such as the position or thickness of the underline
and strikethrough. The modifications can have the suffix \fBpx\fP for pixels
or \fB%\fP for percentage of original value. No suffix means use pts.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
modify_font underline_position \-2
modify_font underline_thickness 150%
modify_font strikethrough_position 2px
.EE
.UNINDENT
.UNINDENT
.sp
Additionally, you can modify the size of the cell in which each font glyph is
rendered and the baseline at which the glyph is placed in the cell.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
modify_font cell_width 80%
modify_font cell_height \-2px
modify_font baseline 3
.EE
.UNINDENT
.UNINDENT
.sp
Note that modifying the baseline will automatically adjust the underline and
strikethrough positions by the same amount. Increasing the baseline raises
glyphs inside the cell and decreasing it lowers them. Decreasing the cell size
might cause rendering artifacts, so use with care.
.INDENT 0.0
.TP
.B box_drawing_scale
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
box_drawing_scale 0.001, 1, 1.5, 2
.EE
.UNINDENT
.UNINDENT
.sp
The sizes of the lines used for the box drawing Unicode characters. These values
are in pts. They will be scaled by the monitor DPI to arrive at a pixel value.
There must be four values corresponding to thin, normal, thick, and very thick
lines.
.INDENT 0.0
.TP
.B undercurl_style
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
undercurl_style thin\-sparse
.EE
.UNINDENT
.UNINDENT
.sp
The style with which undercurls are rendered. This option takes the form
\fB(thin|thick)\-(sparse|dense)\fP\&. Thin and thick control the thickness of the
undercurl. Sparse and dense control how often the curl oscillates. With sparse
the curl will peak once per character, with dense twice.
.INDENT 0.0
.TP
.B text_composition_strategy
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
text_composition_strategy platform
.EE
.UNINDENT
.UNINDENT
.sp
Control how kitty composites text glyphs onto the background color. The default
value of \fBplatform\fP tries for text rendering as close to \(dqnative\(dq for
the platform kitty is running on as possible.
.sp
A value of \fBlegacy\fP uses the old (pre kitty 0.28) strategy for how glyphs
are composited. This will make dark text on light backgrounds look thicker and
light text on dark backgrounds thinner. It might also make some text appear like
the strokes are uneven.
.sp
You can fine tune the actual contrast curve used for glyph composition by
specifying up to two space\-separated numbers for this setting.
.sp
The first number is the gamma adjustment, which controls the thickness of dark
text on light backgrounds. Increasing the value will make text appear thicker.
The default value for this is \fB1.0\fP on Linux and \fB1.7\fP on macOS.
Valid values are \fB0.01\fP and above. The result is scaled based on the
luminance difference between the background and the foreground. Dark text on
light backgrounds receives the full impact of the curve while light text on dark
backgrounds is affected very little.
.sp
The second number is an additional multiplicative contrast. It is percentage
ranging from \fB0\fP to \fB100\fP\&. The default value is \fB0\fP on Linux
and \fB30\fP on macOS.
.sp
If you wish to achieve similar looking thickness in light and dark themes, a good way
to experiment is start by setting the value to \fB1.0 0\fP and use a dark theme.
Then adjust the second parameter until it looks good. Then switch to a light theme
and adjust the first parameter until the perceived thickness matches the dark theme.
.INDENT 0.0
.TP
.B text_fg_override_threshold
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
text_fg_override_threshold 0
.EE
.UNINDENT
.UNINDENT
.sp
The minimum accepted difference in luminance between the foreground and background
color, below which kitty will override the foreground color. It is percentage
ranging from \fB0\fP to \fB100\fP\&. If the difference in luminance of the
foreground and background is below this threshold, the foreground color will be set
to white if the background is dark or black if the background is light. The default
value is \fB0\fP, which means no overriding is performed. Useful when working with applications
that use colors that do not contrast well with your preferred color scheme.
.sp
WARNING: Some programs use characters (such as block characters) for graphics
display and may expect to be able to set the foreground and background to the
same color (or similar colors).  If you see unexpected stripes, dots, lines,
incorrect color, no color where you expect color, or any kind of graphic
display problem try setting \fI\%text_fg_override_threshold\fP to \fB0\fP to
see if this is the cause of the problem.
.SH Cursor customization
.INDENT 0.0
.TP
.B cursor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor #cccccc
.EE
.UNINDENT
.UNINDENT
.sp
Default cursor color. If set to the special value \fBnone\fP the cursor will
be rendered with a \(dqreverse video\(dq effect. Its color will be the color of the
text in the cell it is over and the text will be rendered with the background
color of the cell. Note that if the program running in the terminal sets a
cursor color, this takes precedence. Also, the cursor colors are modified if
the cell background and foreground colors have very low contrast. Note that some
themes set this value, so if you want to override it, place your value after
the lines where the theme file is included.
.INDENT 0.0
.TP
.B cursor_text_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_text_color #111111
.EE
.UNINDENT
.UNINDENT
.sp
The color of text under the cursor. If you want it rendered with the
background color of the cell underneath instead, use the special keyword:
\fIbackground\fP\&. Note that if \fI\%cursor\fP is set to \fBnone\fP then this option
is ignored. Note that some themes set this value, so if you want to override it,
place your value after the lines where the theme file is included.
.INDENT 0.0
.TP
.B cursor_shape
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_shape block
.EE
.UNINDENT
.UNINDENT
.sp
The cursor shape can be one of \fBblock\fP, \fBbeam\fP, \fBunderline\fP\&.
Note that when reloading the config this will be changed only if the cursor
shape has not been set by the program running in the terminal. This sets the
default cursor shape, applications running in the terminal can override it. In
particular, \X'tty: link #shell-integration'\fI\%shell integration\fP\X'tty: link' in kitty sets the
cursor shape to \fBbeam\fP at shell prompts. You can avoid this by setting
\fI\%shell_integration\fP to \fBno\-cursor\fP\&.
.INDENT 0.0
.TP
.B cursor_shape_unfocused
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_shape_unfocused hollow
.EE
.UNINDENT
.UNINDENT
.sp
Defines the text cursor shape when the OS window is not focused. The unfocused
cursor shape can be one of \fBblock\fP, \fBbeam\fP, \fBunderline\fP,
\fBhollow\fP\&.
.INDENT 0.0
.TP
.B cursor_beam_thickness
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_beam_thickness 1.5
.EE
.UNINDENT
.UNINDENT
.sp
The thickness of the beam cursor (in pts).
.INDENT 0.0
.TP
.B cursor_underline_thickness
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_underline_thickness 2.0
.EE
.UNINDENT
.UNINDENT
.sp
The thickness of the underline cursor (in pts).
.INDENT 0.0
.TP
.B cursor_blink_interval
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_blink_interval \-1
.EE
.UNINDENT
.UNINDENT
.sp
The interval to blink the cursor (in seconds). Set to zero to disable blinking.
Negative values mean use system default. Note that the minimum interval will be
limited to \fI\%repaint_delay\fP\&.
.INDENT 0.0
.TP
.B cursor_stop_blinking_after
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
cursor_stop_blinking_after 15.0
.EE
.UNINDENT
.UNINDENT
.sp
Stop blinking cursor after the specified number of seconds of keyboard
inactivity. Set to zero to never stop blinking.
.SH Scrollback
.INDENT 0.0
.TP
.B scrollback_lines
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
scrollback_lines 2000
.EE
.UNINDENT
.UNINDENT
.sp
Number of lines of history to keep in memory for scrolling back. Memory is
allocated on demand. Negative numbers are (effectively) infinite scrollback.
Note that using very large scrollback is not recommended as it can slow down
performance of the terminal and also use large amounts of RAM. Instead, consider
using \fI\%scrollback_pager_history_size\fP\&. Note that on config reload if this
is changed it will only affect newly created windows, not existing ones.
.INDENT 0.0
.TP
.B scrollback_indicator_opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
scrollback_indicator_opacity 1.0
.EE
.UNINDENT
.UNINDENT
.sp
The opacity of the scrollback indicator which is a small colored rectangle that moves
along the right hand side of the window as you scroll, indicating what fraction you
have scrolled. The default is one which means fully opaque, aka visible.
Set to a value between zero and one to make the indicator less visible.
.INDENT 0.0
.TP
.B scrollback_pager
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
scrollback_pager less \-\-chop\-long\-lines \-\-RAW\-CONTROL\-CHARS +INPUT_LINE_NUMBER
.EE
.UNINDENT
.UNINDENT
.sp
Program with which to view scrollback in a new window. The scrollback buffer is
passed as STDIN to this program. If you change it, make sure the program you use
can handle ANSI escape sequences for colors and text formatting.
INPUT_LINE_NUMBER in the command line above will be replaced by an integer
representing which line should be at the top of the screen. Similarly
CURSOR_LINE and CURSOR_COLUMN will be replaced by the current cursor position or
set to 0 if there is no cursor, for example, when showing the last command
output.
.INDENT 0.0
.TP
.B scrollback_pager_history_size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
scrollback_pager_history_size 0
.EE
.UNINDENT
.UNINDENT
.sp
Separate scrollback history size (in MB), used only for browsing the scrollback
buffer with pager. This separate buffer is not available for interactive
scrolling but will be piped to the pager program when viewing scrollback buffer
in a separate window. The current implementation stores the data in UTF\-8, so
approximately 10000 lines per megabyte at 100 chars per line, for pure ASCII,
unformatted text. A value of zero or less disables this feature. The maximum
allowed size is 4GB. Note that on config reload if this is changed it will only
affect newly created windows, not existing ones.
.INDENT 0.0
.TP
.B scrollback_fill_enlarged_window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
scrollback_fill_enlarged_window no
.EE
.UNINDENT
.UNINDENT
.sp
Fill new space with lines from the scrollback buffer after enlarging a window.
.INDENT 0.0
.TP
.B wheel_scroll_multiplier
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
wheel_scroll_multiplier 5.0
.EE
.UNINDENT
.UNINDENT
.sp
Multiplier for the number of lines scrolled by the mouse wheel. Note that this
is only used for low precision scrolling devices, not for high precision
scrolling devices on platforms such as macOS and Wayland. Use negative numbers
to change scroll direction. See also \fI\%wheel_scroll_min_lines\fP\&.
.INDENT 0.0
.TP
.B wheel_scroll_min_lines
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
wheel_scroll_min_lines 1
.EE
.UNINDENT
.UNINDENT
.sp
The minimum number of lines scrolled by the mouse wheel. The \fI\%scroll
multiplier\fP only takes effect after it reaches this
number. Note that this is only used for low precision scrolling devices like
wheel mice that scroll by very small amounts when using the wheel. With a
negative number, the minimum number of lines will always be added.
.INDENT 0.0
.TP
.B touch_scroll_multiplier
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
touch_scroll_multiplier 1.0
.EE
.UNINDENT
.UNINDENT
.sp
Multiplier for the number of lines scrolled by a touchpad. Note that this is
only used for high precision scrolling devices on platforms such as macOS and
Wayland. Use negative numbers to change scroll direction.
.SH Mouse
.INDENT 0.0
.TP
.B mouse_hide_wait
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_hide_wait 3.0
.EE
.UNINDENT
.UNINDENT
.sp
Hide mouse cursor after the specified number of seconds of the mouse not being
used. Set to zero to disable mouse cursor hiding. Set to a negative value to
hide the mouse cursor immediately when typing text. Disabled by default on macOS
as getting it to work robustly with the ever\-changing sea of bugs that is Cocoa
is too much effort.
.INDENT 0.0
.TP
.B url_color, url_style
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
url_color #0087bd
url_style curly
.EE
.UNINDENT
.UNINDENT
.sp
The color and style for highlighting URLs on mouse\-over. \fI\%url_style\fP can
be one of: \fBnone\fP, \fBstraight\fP, \fBdouble\fP, \fBcurly\fP,
\fBdotted\fP, \fBdashed\fP\&.
.INDENT 0.0
.TP
.B open_url_with
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
open_url_with default
.EE
.UNINDENT
.UNINDENT
.sp
The program to open clicked URLs. The special value \fBdefault\fP will first
look for any URL handlers defined via the \fI\%Scripting the mouse click\fP facility and if
non are found, it will use the Operating System\(aqs default URL handler
(\fBopen\fP on macOS and \fBxdg\-open\fP on Linux).
.INDENT 0.0
.TP
.B url_prefixes
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
.EE
.UNINDENT
.UNINDENT
.sp
The set of URL prefixes to look for when detecting a URL under the mouse cursor.
.INDENT 0.0
.TP
.B detect_urls
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
detect_urls yes
.EE
.UNINDENT
.UNINDENT
.sp
Detect URLs under the mouse. Detected URLs are highlighted with an underline and
the mouse cursor becomes a hand over them. Even if this option is disabled, URLs
are still clickable. See also the \fI\%underline_hyperlinks\fP option to control
how hyperlinks (as opposed to plain text URLs) are displayed.
.INDENT 0.0
.TP
.B url_excluded_characters
.UNINDENT
.sp
Additional characters to be disallowed from URLs, when detecting URLs under the
mouse cursor. By default, all characters that are legal in URLs are allowed.
Additionally, newlines are allowed (but stripped). This is to accommodate
programs such as mutt that add hard line breaks even for continued lines.
\fB\en\fP can be added to this option to disable this behavior. Special
characters can be specified using backslash escapes, to specify a backslash use
a double backslash.
.INDENT 0.0
.TP
.B show_hyperlink_targets
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
show_hyperlink_targets no
.EE
.UNINDENT
.UNINDENT
.sp
When the mouse hovers over a terminal hyperlink, show the actual URL that will
be activated when the hyperlink is clicked.
.INDENT 0.0
.TP
.B underline_hyperlinks
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
underline_hyperlinks hover
.EE
.UNINDENT
.UNINDENT
.sp
Control how hyperlinks are underlined. They can either be underlined on mouse
\fBhover\fP, \fBalways\fP (i.e. permanently underlined) or \fBnever\fP which means
that kitty will not apply any underline styling to hyperlinks.
Uses the \fI\%url_style\fP and \fI\%url_color\fP settings for the underline style. Note
that reloading the config and changing this value to/from \fBalways\fP will only
affect text subsequently received by kitty.
.INDENT 0.0
.TP
.B copy_on_select
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
copy_on_select no
.EE
.UNINDENT
.UNINDENT
.sp
Copy to clipboard or a private buffer on select. With this set to
\fBclipboard\fP, selecting text with the mouse will cause the text to be
copied to clipboard. Useful on platforms such as macOS that do not have the
concept of primary selection. You can instead specify a name such as \fBa1\fP
to copy to a private kitty buffer. Map a shortcut with the
\fBpaste_from_buffer\fP action to paste from this private buffer.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
copy_on_select a1
map shift+cmd+v paste_from_buffer a1
.EE
.UNINDENT
.UNINDENT
.sp
Note that copying to the clipboard is a security risk, as all programs,
including websites open in your browser can read the contents of the system
clipboard.
.INDENT 0.0
.TP
.B paste_actions
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
paste_actions quote\-urls\-at\-prompt,confirm
.EE
.UNINDENT
.UNINDENT
.sp
A comma separated list of actions to take when pasting text into the terminal.
The supported paste actions are:
.INDENT 0.0
.TP
.B \fBquote\-urls\-at\-prompt\fP:
If the text being pasted is a URL and the cursor is at a shell prompt,
automatically quote the URL (needs \fI\%shell_integration\fP).
.TP
.B \fBreplace\-dangerous\-control\-codes\fP
Replace dangerous control codes from pasted text, without confirmation.
.TP
.B \fBreplace\-newline\fP
Replace the newline character from pasted text, without confirmation.
.TP
.B \fBconfirm\fP:
Confirm the paste if the text to be pasted contains any terminal control codes
as this can be dangerous, leading to code execution if the shell/program running
in the terminal does not properly handle these.
.TP
.B \fBconfirm\-if\-large\fP
Confirm the paste if it is very large (larger than 16KB) as pasting
large amounts of text into shells can be very slow.
.TP
.B \fBfilter\fP:
Run the filter_paste() function from the file \fBpaste\-actions.py\fP in
the kitty config directory on the pasted text. The text returned by the
function will be actually pasted.
.TP
.B \fBno\-op\fP:
Has no effect.
.UNINDENT
.INDENT 0.0
.TP
.B strip_trailing_spaces
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
strip_trailing_spaces never
.EE
.UNINDENT
.UNINDENT
.sp
Remove spaces at the end of lines when copying to clipboard. A value of
\fBsmart\fP will do it when using normal selections, but not rectangle
selections. A value of \fBalways\fP will always do it.
.INDENT 0.0
.TP
.B select_by_word_characters
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
select_by_word_characters @\-./_~?&=%+#
.EE
.UNINDENT
.UNINDENT
.sp
Characters considered part of a word when double clicking. In addition to these
characters any character that is marked as an alphanumeric character in the
Unicode database will be matched.
.INDENT 0.0
.TP
.B select_by_word_characters_forward
.UNINDENT
.sp
Characters considered part of a word when extending the selection forward on
double clicking. In addition to these characters any character that is marked
as an alphanumeric character in the Unicode database will be matched.
.sp
If empty (default) \fI\%select_by_word_characters\fP will be used for both
directions.
.INDENT 0.0
.TP
.B click_interval
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
click_interval \-1.0
.EE
.UNINDENT
.UNINDENT
.sp
The interval between successive clicks to detect double/triple clicks (in
seconds). Negative numbers will use the system default instead, if available, or
fallback to 0.5.
.INDENT 0.0
.TP
.B focus_follows_mouse
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
focus_follows_mouse no
.EE
.UNINDENT
.UNINDENT
.sp
Set the active window to the window under the mouse when moving the mouse around.
On macOS, this will also cause the OS Window under the mouse to be focused automatically when the
mouse enters it.
.INDENT 0.0
.TP
.B pointer_shape_when_grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
pointer_shape_when_grabbed arrow
.EE
.UNINDENT
.UNINDENT
.sp
The shape of the mouse pointer when the program running in the terminal grabs
the mouse.
.INDENT 0.0
.TP
.B default_pointer_shape
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
default_pointer_shape beam
.EE
.UNINDENT
.UNINDENT
.sp
The default shape of the mouse pointer.
.INDENT 0.0
.TP
.B pointer_shape_when_dragging
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
pointer_shape_when_dragging beam
.EE
.UNINDENT
.UNINDENT
.sp
The default shape of the mouse pointer when dragging across text.
.SS Mouse actions
.sp
Mouse buttons can be mapped to perform arbitrary actions. The syntax is:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map button\-name event\-type modes action
.EE
.UNINDENT
.UNINDENT
.sp
Where \fBbutton\-name\fP is one of \fBleft\fP, \fBmiddle\fP, \fBright\fP,
\fBb1\fP ... \fBb8\fP with added keyboard modifiers. For example:
\fBctrl+shift+left\fP refers to holding the \fBCtrl+Shift\fP keys while
clicking with the left mouse button. The value \fBb1\fP ... \fBb8\fP can be
used to refer to up to eight buttons on a mouse.
.sp
\fBevent\-type\fP is one of \fBpress\fP, \fBrelease\fP,
\fBdoublepress\fP, \fBtriplepress\fP, \fBclick\fP, \fBdoubleclick\fP\&.
\fBmodes\fP indicates whether the action is performed when the mouse is
grabbed by the program running in the terminal, or not. The values are
\fBgrabbed\fP or \fBungrabbed\fP or a comma separated combination of them.
\fBgrabbed\fP refers to when the program running in the terminal has requested
mouse events. Note that the click and double click events have a delay of
\fI\%click_interval\fP to disambiguate from double and triple presses.
.sp
You can run kitty with the \X'tty: link #cmdoption-kitty-debug-input'\fI\%kitty \-\-debug\-input\fP\X'tty: link' command line option
to see mouse events. See the builtin actions below to get a sense of what is
possible.
.sp
If you want to unmap a button, map it to nothing. For example, to disable
opening of URLs with a plain click:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map left click ungrabbed
.EE
.UNINDENT
.UNINDENT
.sp
See all the mappable actions including mouse actions \fI\%here\fP\&.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Once a selection is started, releasing the button that started it will
automatically end it and no release event will be dispatched.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B clear_all_mouse_actions
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clear_all_mouse_actions no
.EE
.UNINDENT
.UNINDENT
.sp
Remove all mouse action definitions up to this point. Useful, for instance, to
remove the default mouse actions.
.INDENT 0.0
.TP
.B Click the link under the mouse or move the cursor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map left click ungrabbed mouse_handle_click selection link prompt
.EE
.UNINDENT
.UNINDENT
.sp
First check for a selection and if one exists do nothing. Then check for a link
under the mouse cursor and if one exists, click it. Finally check if the click
happened at the current shell prompt and if so, move the cursor to the click
location. Note that this requires \X'tty: link #shell-integration'\fI\%shell integration\fP\X'tty: link'
to work.
.INDENT 0.0
.TP
.B Click the link under the mouse or move the cursor even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt
.EE
.UNINDENT
.UNINDENT
.sp
Same as above, except that the action is performed even when the mouse is
grabbed by the program running in the terminal.
.INDENT 0.0
.TP
.B Click the link under the mouse cursor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link
.EE
.UNINDENT
.UNINDENT
.sp
Variant with \fBCtrl+Shift\fP is present because the simple click based version
has an unavoidable delay of \fI\%click_interval\fP, to disambiguate clicks from
double clicks.
.INDENT 0.0
.TP
.B Discard press event for link click
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+shift+left press grabbed discard_event
.EE
.UNINDENT
.UNINDENT
.sp
Prevent this press event from being sent to the program that has grabbed the
mouse, as the corresponding release event is used to open a URL.
.INDENT 0.0
.TP
.B Paste from the primary selection
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map middle release ungrabbed paste_from_selection
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Start selecting text
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map left press ungrabbed mouse_selection normal
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Start selecting text in a rectangle
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select a word
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map left doublepress ungrabbed mouse_selection word
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select a line
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map left triplepress ungrabbed mouse_selection line
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select line from point
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point
.EE
.UNINDENT
.UNINDENT
.sp
Select from the clicked point to the end of the line. If you would like to select the word at the point and then extend to the rest of the line, change \fIline_from_point\fP to \fIword_and_line_from_point\fP\&.
.INDENT 0.0
.TP
.B Extend the current selection
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map right press ungrabbed mouse_selection extend
.EE
.UNINDENT
.UNINDENT
.sp
If you want only the end of the selection to be moved instead of the nearest
boundary, use \fBmove\-end\fP instead of \fBextend\fP\&.
.INDENT 0.0
.TP
.B Paste from the primary selection even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+middle release ungrabbed,grabbed paste_selection
mouse_map shift+middle press grabbed discard_event
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Start selecting text even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+left press ungrabbed,grabbed mouse_selection normal
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Start selecting text in a rectangle even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select a word even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select a line even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Select line from point even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point
.EE
.UNINDENT
.UNINDENT
.sp
Select from the clicked point to the end of the line even when grabbed. If you would like to select the word at the point and then extend to the rest of the line, change \fIline_from_point\fP to \fIword_and_line_from_point\fP\&.
.INDENT 0.0
.TP
.B Extend the current selection even when grabbed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map shift+right press ungrabbed,grabbed mouse_selection extend
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Show clicked command output in pager
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output
.EE
.UNINDENT
.UNINDENT
.sp
Requires \X'tty: link #shell-integration'\fI\%shell integration\fP\X'tty: link' to work.
.SH Performance tuning
.INDENT 0.0
.TP
.B repaint_delay
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
repaint_delay 10
.EE
.UNINDENT
.UNINDENT
.sp
Delay between screen updates (in milliseconds). Decreasing it, increases
frames\-per\-second (FPS) at the cost of more CPU usage. The default value yields
~100 FPS which is more than sufficient for most uses. Note that to actually
achieve 100 FPS, you have to either set \fI\%sync_to_monitor\fP to \fBno\fP or
use a monitor with a high refresh rate. Also, to minimize latency when there is
pending input to be processed, this option is ignored.
.INDENT 0.0
.TP
.B input_delay
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
input_delay 3
.EE
.UNINDENT
.UNINDENT
.sp
Delay before input from the program running in the terminal is processed (in
milliseconds). Note that decreasing it will increase responsiveness, but also
increase CPU usage and might cause flicker in full screen programs that redraw
the entire screen on each loop, because kitty is so fast that partial screen
updates will be drawn. This setting is ignored when the input buffer is almost full.
.INDENT 0.0
.TP
.B sync_to_monitor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
sync_to_monitor yes
.EE
.UNINDENT
.UNINDENT
.sp
Sync screen updates to the refresh rate of the monitor. This prevents
\X'tty: link https://en.wikipedia.org/wiki/Screen_tearing'\fI\%screen tearing\fP\X'tty: link' when
scrolling. However, it limits the rendering speed to the refresh rate of your
monitor. With a very high speed mouse/high keyboard repeat rate, you may notice
some slight input latency. If so, set this to \fBno\fP\&.
.SH Terminal bell
.INDENT 0.0
.TP
.B enable_audio_bell
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
enable_audio_bell yes
.EE
.UNINDENT
.UNINDENT
.sp
The audio bell. Useful to disable it in environments that require silence.
.INDENT 0.0
.TP
.B visual_bell_duration
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
visual_bell_duration 0.0
.EE
.UNINDENT
.UNINDENT
.sp
The visual bell duration (in seconds). Flash the screen when a bell occurs for
the specified number of seconds. Set to zero to disable.
.INDENT 0.0
.TP
.B visual_bell_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
visual_bell_color none
.EE
.UNINDENT
.UNINDENT
.sp
The color used by visual bell. Set to \fBnone\fP will fall back to selection
background color. If you feel that the visual bell is too bright, you can
set it to a darker color.
.INDENT 0.0
.TP
.B window_alert_on_bell
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_alert_on_bell yes
.EE
.UNINDENT
.UNINDENT
.sp
Request window attention on bell. Makes the dock icon bounce on macOS or the
taskbar flash on Linux.
.INDENT 0.0
.TP
.B bell_on_tab
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
bell_on_tab \(dq🔔 \(dq
.EE
.UNINDENT
.UNINDENT
.sp
Some text or a Unicode symbol to show on the tab if a window in the tab that
does not have focus has a bell. If you want to use leading or trailing
spaces, surround the text with quotes. See \fI\%tab_title_template\fP for how
this is rendered.
.sp
For backwards compatibility, values of \fByes\fP, \fBy\fP and \fBtrue\fP
are converted to the default bell symbol and \fBno\fP, \fBn\fP,
\fBfalse\fP and \fBnone\fP are converted to the empty string.
.INDENT 0.0
.TP
.B command_on_bell
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
command_on_bell none
.EE
.UNINDENT
.UNINDENT
.sp
Program to run when a bell occurs. The environment variable
\X'tty: link #envvar-KITTY_CHILD_CMDLINE'\fI\%KITTY_CHILD_CMDLINE\fP\X'tty: link' can be used to get the program running in the
window in which the bell occurred.
.INDENT 0.0
.TP
.B bell_path
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
bell_path none
.EE
.UNINDENT
.UNINDENT
.sp
Path to a sound file to play as the bell sound. If set to \fBnone\fP, the
system default bell sound is used. Must be in a format supported by the
operating systems sound API, such as WAV or OGA on Linux (libcanberra) or AIFF,
MP3 or WAV on macOS (NSSound).
.INDENT 0.0
.TP
.B linux_bell_theme
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
linux_bell_theme __custom
.EE
.UNINDENT
.UNINDENT
.sp
The XDG Sound Theme kitty will use to play the bell sound. Defaults to the custom theme name used by GNOME and Budgie, falling back to the default freedesktop theme if it does not exist. This option may be removed if Linux ever provides desktop\-agnostic support for setting system sound themes.
.SH Window layout
.INDENT 0.0
.TP
.B remember_window_size, initial_window_width, initial_window_height
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
remember_window_size  yes
initial_window_width  640
initial_window_height 400
.EE
.UNINDENT
.UNINDENT
.sp
If enabled, the \X'tty: link #term-os_window'\fI\%OS Window\fP\X'tty: link' size will be remembered so that
new instances of kitty will have the same size as the previous instance.
If disabled, the \X'tty: link #term-os_window'\fI\%OS Window\fP\X'tty: link' will initially have size
configured by initial_window_width/height, in pixels. You can use a suffix of
\(dqc\(dq on the width/height values to have them interpreted as number of cells
instead of pixels.
.INDENT 0.0
.TP
.B enabled_layouts
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
enabled_layouts *
.EE
.UNINDENT
.UNINDENT
.sp
The enabled window layouts. A comma separated list of layout names. The special
value \fBall\fP means all layouts. The first listed layout will be used as the
startup layout. Default configuration is all layouts in alphabetical order. For
a list of available layouts, see the \X'tty: link #layouts'\fI\%Layouts\fP\X'tty: link'\&.
.INDENT 0.0
.TP
.B window_resize_step_cells, window_resize_step_lines
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_resize_step_cells 2
window_resize_step_lines 2
.EE
.UNINDENT
.UNINDENT
.sp
The step size (in units of cell width/cell height) to use when resizing kitty
windows in a layout with the shortcut \fI\%ctrl+shift+r\fP\&. The cells
value is used for horizontal resizing, and the lines value is used for vertical
resizing.
.INDENT 0.0
.TP
.B window_border_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_border_width 0.5pt
.EE
.UNINDENT
.UNINDENT
.sp
The width of window borders. Can be either in pixels (px) or pts (pt). Values in
pts will be rounded to the nearest number of pixels based on screen resolution.
If not specified, the unit is assumed to be pts. Note that borders are displayed
only when more than one window is visible. They are meant to separate multiple
windows.
.INDENT 0.0
.TP
.B draw_minimal_borders
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
draw_minimal_borders yes
.EE
.UNINDENT
.UNINDENT
.sp
Draw only the minimum borders needed. This means that only the borders that
separate the window from a neighbor are drawn. Note that setting a
non\-zero \fI\%window_margin_width\fP overrides this and causes all borders to be
drawn.
.INDENT 0.0
.TP
.B window_margin_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_margin_width 0
.EE
.UNINDENT
.UNINDENT
.sp
The window margin (in pts) (blank area outside the border). A single value sets
all four sides. Two values set the vertical and horizontal sides. Three values
set top, horizontal and bottom. Four values set top, right, bottom and left.
.INDENT 0.0
.TP
.B single_window_margin_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
single_window_margin_width \-1
.EE
.UNINDENT
.UNINDENT
.sp
The window margin to use when only a single window is visible (in pts). Negative
values will cause the value of \fI\%window_margin_width\fP to be used instead. A
single value sets all four sides. Two values set the vertical and horizontal
sides. Three values set top, horizontal and bottom. Four values set top, right,
bottom and left.
.INDENT 0.0
.TP
.B window_padding_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_padding_width 0
.EE
.UNINDENT
.UNINDENT
.sp
The window padding (in pts) (blank area between the text and the window border).
A single value sets all four sides. Two values set the vertical and horizontal
sides. Three values set top, horizontal and bottom. Four values set top, right,
bottom and left.
.INDENT 0.0
.TP
.B single_window_padding_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
single_window_padding_width \-1
.EE
.UNINDENT
.UNINDENT
.sp
The window padding to use when only a single window is visible (in pts). Negative
values will cause the value of \fI\%window_padding_width\fP to be used instead. A
single value sets all four sides. Two values set the vertical and horizontal
sides. Three values set top, horizontal and bottom. Four values set top, right,
bottom and left.
.INDENT 0.0
.TP
.B placement_strategy
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
placement_strategy center
.EE
.UNINDENT
.UNINDENT
.sp
When the window size is not an exact multiple of the cell size, the cell area of
the terminal window will have some extra padding on the sides. You can control
how that padding is distributed with this option. Using a value of
\fBcenter\fP means the cell area will be placed centrally. A value of
\fBtop\-left\fP means the padding will be only at the bottom and right edges.
The value can be one of: \fBtop\-left\fP, \fBtop\fP, \fBtop\-right\fP,
\fBleft\fP, \fBcenter\fP, \fBright\fP, \fBbottom\-left\fP,
\fBbottom\fP, \fBbottom\-right\fP\&.
.INDENT 0.0
.TP
.B active_border_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
active_border_color #00ff00
.EE
.UNINDENT
.UNINDENT
.sp
The color for the border of the active window. Set this to \fBnone\fP to not
draw borders around the active window.
.INDENT 0.0
.TP
.B inactive_border_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
inactive_border_color #cccccc
.EE
.UNINDENT
.UNINDENT
.sp
The color for the border of inactive windows.
.INDENT 0.0
.TP
.B bell_border_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
bell_border_color #ff5a00
.EE
.UNINDENT
.UNINDENT
.sp
The color for the border of inactive windows in which a bell has occurred.
.INDENT 0.0
.TP
.B inactive_text_alpha
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
inactive_text_alpha 1.0
.EE
.UNINDENT
.UNINDENT
.sp
Fade the text in inactive windows by the specified amount (a number between zero
and one, with zero being fully faded).
.INDENT 0.0
.TP
.B hide_window_decorations
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
hide_window_decorations no
.EE
.UNINDENT
.UNINDENT
.sp
Hide the window decorations (title\-bar and window borders) with \fByes\fP\&. On
macOS, \fBtitlebar\-only\fP and \fBtitlebar\-and\-corners\fP can be used to only hide the titlebar and the rounded corners.
Whether this works and exactly what effect it has depends on the window manager/operating
system. Note that the effects of changing this option when reloading config
are undefined. When using \fBtitlebar\-only\fP, it is useful to also set
\fI\%window_margin_width\fP and \fI\%placement_strategy\fP to prevent the rounded
corners from clipping text. Or use \fBtitlebar\-and\-corners\fP\&.
.INDENT 0.0
.TP
.B window_logo_path
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_logo_path none
.EE
.UNINDENT
.UNINDENT
.sp
Path to a logo image. Must be in PNG format. Relative paths are interpreted
relative to the kitty config directory. The logo is displayed in a corner of
every kitty window. The position is controlled by \fI\%window_logo_position\fP\&.
Individual windows can be configured to have different logos either using the
\X'tty: link #action-launch'\fI\%launch\fP\X'tty: link' action or the \fI\%remote control\fP facility.
.INDENT 0.0
.TP
.B window_logo_position
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_logo_position bottom\-right
.EE
.UNINDENT
.UNINDENT
.sp
Where to position the window logo in the window. The value can be one of:
\fBtop\-left\fP, \fBtop\fP, \fBtop\-right\fP, \fBleft\fP, \fBcenter\fP,
\fBright\fP, \fBbottom\-left\fP, \fBbottom\fP, \fBbottom\-right\fP\&.
.INDENT 0.0
.TP
.B window_logo_alpha
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_logo_alpha 0.5
.EE
.UNINDENT
.UNINDENT
.sp
The amount the logo should be faded into the background. With zero being fully
faded and one being fully opaque.
.INDENT 0.0
.TP
.B window_logo_scale
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
window_logo_scale 0
.EE
.UNINDENT
.UNINDENT
.sp
The percentage (0\-100] of the window size to which the logo should scale. Using a single
number means the logo is scaled to that percentage of the shortest window dimension, while preseving
aspect ratio of the logo image.
.sp
Using two numbers means the width and height of the logo are scaled to the respective
percentage of the window\(aqs width and height.
.sp
Using zero as the percentage disables scaling in that dimension. A single zero (the default)
disables all scaling of the window logo.
.INDENT 0.0
.TP
.B resize_debounce_time
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
resize_debounce_time 0.1 0.5
.EE
.UNINDENT
.UNINDENT
.sp
The time to wait (in seconds) before asking the program running in kitty to resize and
redraw the screen during a live resize of the OS window, when no new resize
events have been received, i.e. when resizing is either paused or finished.
On platforms such as macOS, where the operating system sends events corresponding
to the start and end of a live resize, the second number is used for
redraw\-after\-pause since kitty can distinguish between a pause and end of
resizing. On such systems the first number is ignored and redraw is immediate
after end of resize. On other systems only the first number is used so that kitty
is \(dqready\(dq quickly after the end of resizing, while not also continuously
redrawing, to save energy.
.INDENT 0.0
.TP
.B resize_in_steps
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
resize_in_steps no
.EE
.UNINDENT
.UNINDENT
.sp
Resize the OS window in steps as large as the cells, instead of with the usual
pixel accuracy. Combined with \fI\%initial_window_width\fP and
\fI\%initial_window_height\fP in number of cells, this option can be used to keep
the margins as small as possible when resizing the OS window. Note that this
does not currently work on Wayland.
.INDENT 0.0
.TP
.B visual_window_select_characters
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
.EE
.UNINDENT
.UNINDENT
.sp
The list of characters for visual window selection. For example, for selecting a
window to focus on with \fI\%ctrl+shift+f7\fP\&. The value should be a series
of unique numbers or alphabets, case insensitive, from the set \fB0\-9A\-Z\(ga\-=[];\(aq,./\e\fP\&.
Specify your preference as a string of characters.
.INDENT 0.0
.TP
.B confirm_os_window_close
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
confirm_os_window_close \-1
.EE
.UNINDENT
.UNINDENT
.sp
Ask for confirmation when closing an OS window or a tab with at least this
number of kitty windows in it by window manager (e.g. clicking the window close
button or pressing the operating system shortcut to close windows) or by the
\X'tty: link #action-close_tab'\fI\%close_tab\fP\X'tty: link' action. A value of zero disables confirmation. This confirmation
also applies to requests to quit the entire application (all OS windows, via the
\X'tty: link #action-quit'\fI\%quit\fP\X'tty: link' action). Negative values are converted to positive ones, however,
with \fI\%shell_integration\fP enabled, using negative values means windows
sitting at a shell prompt are not counted, only windows where some command is
currently running. Note that if you want confirmation when closing individual
windows, you can map the \X'tty: link #action-close_window_with_confirmation'\fI\%close_window_with_confirmation\fP\X'tty: link' action.
.SH Tab bar
.INDENT 0.0
.TP
.B tab_bar_edge
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_edge bottom
.EE
.UNINDENT
.UNINDENT
.sp
The edge to show the tab bar on, \fBtop\fP or \fBbottom\fP\&.
.INDENT 0.0
.TP
.B tab_bar_margin_width
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_margin_width 0.0
.EE
.UNINDENT
.UNINDENT
.sp
The margin to the left and right of the tab bar (in pts).
.INDENT 0.0
.TP
.B tab_bar_margin_height
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_margin_height 0.0 0.0
.EE
.UNINDENT
.UNINDENT
.sp
The margin above and below the tab bar (in pts). The first number is the margin
between the edge of the OS Window and the tab bar. The second number is the
margin between the tab bar and the contents of the current tab.
.INDENT 0.0
.TP
.B tab_bar_style
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_style fade
.EE
.UNINDENT
.UNINDENT
.sp
The tab bar style, can be one of:
.INDENT 0.0
.TP
.B \fBfade\fP
Each tab\(aqs edges fade into the background color. (See also \fI\%tab_fade\fP)
.TP
.B \fBslant\fP
Tabs look like the tabs in a physical file.
.TP
.B \fBseparator\fP
Tabs are separated by a configurable separator. (See also
\fI\%tab_separator\fP)
.TP
.B \fBpowerline\fP
Tabs are shown as a continuous line with \(dqfancy\(dq separators.
(See also \fI\%tab_powerline_style\fP)
.TP
.B \fBcustom\fP
A user\-supplied Python function called draw_tab is loaded from the file
\fBtab_bar.py\fP in the kitty config directory. For examples of how to
write such a function, see the functions named \fBdraw_tab_with_*\fP in
kitty\(aqs source code: \fBkitty/tab_bar.py\fP\&. See also
\X'tty: link https://github.com/kovidgoyal/kitty/discussions/4447'\fI\%this discussion\fP\X'tty: link'
for examples from kitty users.
.TP
.B \fBhidden\fP
The tab bar is hidden. If you use this, you might want to create
a mapping for the \X'tty: link #action-select_tab'\fI\%select_tab\fP\X'tty: link' action which presents you with a list of
tabs and allows for easy switching to a tab.
.UNINDENT
.INDENT 0.0
.TP
.B tab_bar_align
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_align left
.EE
.UNINDENT
.UNINDENT
.sp
The horizontal alignment of the tab bar, can be one of: \fBleft\fP,
\fBcenter\fP, \fBright\fP\&.
.INDENT 0.0
.TP
.B tab_bar_min_tabs
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_min_tabs 2
.EE
.UNINDENT
.UNINDENT
.sp
The minimum number of tabs that must exist before the tab bar is shown.
.INDENT 0.0
.TP
.B tab_switch_strategy
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_switch_strategy previous
.EE
.UNINDENT
.UNINDENT
.sp
The algorithm to use when switching to a tab when the current tab is closed. The
default of \fBprevious\fP will switch to the last used tab. A value of
\fBleft\fP will switch to the tab to the left of the closed tab. A value of
\fBright\fP will switch to the tab to the right of the closed tab. A value of
\fBlast\fP will switch to the right\-most tab.
.INDENT 0.0
.TP
.B tab_fade
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_fade 0.25 0.5 0.75 1
.EE
.UNINDENT
.UNINDENT
.sp
Control how each tab fades into the background when using \fBfade\fP for the
\fI\%tab_bar_style\fP\&. Each number is an alpha (between zero and one) that
controls how much the corresponding cell fades into the background, with zero
being no fade and one being full fade. You can change the number of cells used
by adding/removing entries to this list.
.INDENT 0.0
.TP
.B tab_separator
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_separator \(dq ┇\(dq
.EE
.UNINDENT
.UNINDENT
.sp
The separator between tabs in the tab bar when using \fBseparator\fP as the
\fI\%tab_bar_style\fP\&.
.INDENT 0.0
.TP
.B tab_powerline_style
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_powerline_style angled
.EE
.UNINDENT
.UNINDENT
.sp
The powerline separator style between tabs in the tab bar when using
\fBpowerline\fP as the \fI\%tab_bar_style\fP, can be one of: \fBangled\fP,
\fBslanted\fP, \fBround\fP\&.
.INDENT 0.0
.TP
.B tab_activity_symbol
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_activity_symbol none
.EE
.UNINDENT
.UNINDENT
.sp
Some text or a Unicode symbol to show on the tab if a window in the tab that
does not have focus has some activity. If you want to use leading or trailing
spaces, surround the text with quotes. See \fI\%tab_title_template\fP for how
this is rendered.
.INDENT 0.0
.TP
.B tab_title_max_length
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_title_max_length 0
.EE
.UNINDENT
.UNINDENT
.sp
The maximum number of cells that can be used to render the text in a tab.
A value of zero means that no limit is applied.
.INDENT 0.0
.TP
.B tab_title_template
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_title_template \(dq{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}\(dq
.EE
.UNINDENT
.UNINDENT
.sp
A template to render the tab title. The default just renders the title with
optional symbols for bell and activity. If you wish to include the tab\-index as
well, use something like: \fB{index}:{title}\fP\&. Useful if you have shortcuts
mapped for \fBgoto_tab N\fP\&. If you prefer to see the index as a superscript,
use \fB{sup.index}\fP\&. All data available is:
.INDENT 0.0
.TP
.B \fBtitle\fP
The current tab title.
.TP
.B \fBindex\fP
The tab index usable with \X'tty: link #action-goto_tab'\fI\%goto_tab N\fP\X'tty: link' shortcuts.
.TP
.B \fBlayout_name\fP
The current layout name.
.TP
.B \fBnum_windows\fP
The number of windows in the tab.
.TP
.B \fBnum_window_groups\fP
The number of window groups (a window group is a window and all of its overlay windows) in the tab.
.TP
.B \fBtab.active_wd\fP
The working directory of the currently active window in the tab
(expensive, requires syscall). Use \fBactive_oldest_wd\fP to get
the directory of the oldest foreground process rather than the newest.
.TP
.B \fBtab.active_exe\fP
The name of the executable running in the foreground of the currently
active window in the tab (expensive, requires syscall). Use
\fBactive_oldest_exe\fP for the oldest foreground process.
.TP
.B \fBmax_title_length\fP
The maximum title length available.
.TP
.B \fBkeyboard_mode\fP
The name of the current \X'tty: link #modal-mappings'\fI\%keyboard mode\fP\X'tty: link' or the empty string if no keyboard mode is active.
.UNINDENT
.sp
Note that formatting is done by Python\(aqs string formatting machinery, so you can
use, for instance, \fB{layout_name[:2].upper()}\fP to show only the first two
letters of the layout name, upper\-cased. If you want to style the text, you can
use styling directives, for example:
\fB{fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}\fP\&.
Similarly, for bold and italic:
\fB{fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}\fP\&.
Note that for backward compatibility, if \fB{bell_symbol}\fP or
\fB{activity_symbol}\fP are not present in the template, they are prepended to
it.
.INDENT 0.0
.TP
.B active_tab_title_template
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
active_tab_title_template none
.EE
.UNINDENT
.UNINDENT
.sp
Template to use for active tabs. If not specified falls back to
\fI\%tab_title_template\fP\&.
.INDENT 0.0
.TP
.B active_tab_foreground, active_tab_background, active_tab_font_style, inactive_tab_foreground, inactive_tab_background, inactive_tab_font_style
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
active_tab_foreground   #000
active_tab_background   #eee
active_tab_font_style   bold\-italic
inactive_tab_foreground #444
inactive_tab_background #999
inactive_tab_font_style normal
.EE
.UNINDENT
.UNINDENT
.sp
Tab bar colors and styles.
.INDENT 0.0
.TP
.B tab_bar_background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_background none
.EE
.UNINDENT
.UNINDENT
.sp
Background color for the tab bar. Defaults to using the terminal background
color.
.INDENT 0.0
.TP
.B tab_bar_margin_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
tab_bar_margin_color none
.EE
.UNINDENT
.UNINDENT
.sp
Color for the tab bar margin area. Defaults to using the terminal background
color for margins above and below the tab bar. For side margins the default
color is chosen to match the background color of the neighboring tab.
.SH Color scheme
.INDENT 0.0
.TP
.B foreground, background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
foreground #dddddd
background #000000
.EE
.UNINDENT
.UNINDENT
.sp
The foreground and background colors.
.INDENT 0.0
.TP
.B background_opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_opacity 1.0
.EE
.UNINDENT
.UNINDENT
.sp
The opacity of the background. A number between zero and one, where one is
opaque and zero is fully transparent. This will only work if supported by the
OS (for instance, when using a compositor under X11). Note that it only sets
the background color\(aqs opacity in cells that have the same background color as
the default terminal background, so that things like the status bar in vim,
powerline prompts, etc. still look good. But it means that if you use a color
theme with a background color in your editor, it will not be rendered as
transparent. Instead you should change the default background color in your
kitty config and not use a background color in the editor color scheme. Or use
the escape codes to set the terminals default colors in a shell script to
launch your editor. Be aware that using a value less than 1.0 is a (possibly
significant) performance hit. When using a low value for this setting, it is
desirable that you set the \fI\%background\fP color to a color the matches the
general color of the desktop background, for best text rendering.  If you want
to dynamically change transparency of windows, set
\fI\%dynamic_background_opacity\fP to \fByes\fP (this is off by default as it
has a performance cost). Changing this option when reloading the config will
only work if \fI\%dynamic_background_opacity\fP was enabled in the original
config.
.INDENT 0.0
.TP
.B background_blur
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_blur 0
.EE
.UNINDENT
.UNINDENT
.sp
Set to a positive value to enable background blur (blurring of the visuals
behind a transparent window) on platforms that support it. Only takes effect
when \fI\%background_opacity\fP is less than one. On macOS, this will also
control the blur radius (amount of blurring). Setting it to too high
a value will cause severe performance issues and/or rendering artifacts.
Usually, values up to 64 work well. Note that this might cause performance issues,
depending on how the platform implements it, so use with care. Currently supported
on macOS and KDE.
.INDENT 0.0
.TP
.B background_image
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_image none
.EE
.UNINDENT
.UNINDENT
.sp
Path to a background image. Must be in PNG format.
.INDENT 0.0
.TP
.B background_image_layout
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_image_layout tiled
.EE
.UNINDENT
.UNINDENT
.sp
Whether to tile, scale or clamp the background image. The value can be one of
\fBtiled\fP, \fBmirror\-tiled\fP, \fBscaled\fP, \fBclamped\fP, \fBcentered\fP
or \fBcscaled\fP\&. The \fBscaled\fP and \fBcscaled\fP values scale the image to the
window size, with \fBcscaled\fP preserving the image aspect ratio.
.INDENT 0.0
.TP
.B background_image_linear
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_image_linear no
.EE
.UNINDENT
.UNINDENT
.sp
When background image is scaled, whether linear interpolation should be used.
.INDENT 0.0
.TP
.B dynamic_background_opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
dynamic_background_opacity no
.EE
.UNINDENT
.UNINDENT
.sp
Allow changing of the \fI\%background_opacity\fP dynamically, using either
keyboard shortcuts (\fI\%ctrl+shift+a>m\fP and
\fI\%ctrl+shift+a>l\fP) or the remote control facility. Changing
this option by reloading the config is not supported.
.INDENT 0.0
.TP
.B background_tint
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_tint 0.0
.EE
.UNINDENT
.UNINDENT
.sp
How much to tint the background image by the background color. This option
makes it easier to read the text. Tinting is done using the current background
color for each window. This option applies only if \fI\%background_opacity\fP is
set and transparent windows are supported or \fI\%background_image\fP is set.
.INDENT 0.0
.TP
.B background_tint_gaps
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
background_tint_gaps 1.0
.EE
.UNINDENT
.UNINDENT
.sp
How much to tint the background image at the window gaps by the background
color, after applying \fI\%background_tint\fP\&. Since this is multiplicative
with \fI\%background_tint\fP, it can be used to lighten the tint over the window
gaps for a \fIseparated\fP look.
.INDENT 0.0
.TP
.B dim_opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
dim_opacity 0.4
.EE
.UNINDENT
.UNINDENT
.sp
How much to dim text that has the DIM/FAINT attribute set. One means no dimming
and zero means fully dimmed (i.e. invisible).
.INDENT 0.0
.TP
.B selection_foreground, selection_background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
selection_foreground #000000
selection_background #fffacd
.EE
.UNINDENT
.UNINDENT
.sp
The foreground and background colors for text selected with the mouse. Setting
both of these to \fBnone\fP will cause a \(dqreverse video\(dq effect for
selections, where the selection will be the cell text color and the text will
become the cell background color. Setting only selection_foreground to
\fBnone\fP will cause the foreground color to be used unchanged. Note that
these colors can be overridden by the program running in the terminal.
.SS The color table
.sp
The 256 terminal colors. There are 8 basic colors, each color has a dull and
bright version, for the first 16 colors. You can set the remaining 240 colors as
color16 to color255.
.INDENT 0.0
.TP
.B color0, color8
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color0 #000000
color8 #767676
.EE
.UNINDENT
.UNINDENT
.sp
black
.INDENT 0.0
.TP
.B color1, color9
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color1 #cc0403
color9 #f2201f
.EE
.UNINDENT
.UNINDENT
.sp
red
.INDENT 0.0
.TP
.B color2, color10
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color2  #19cb00
color10 #23fd00
.EE
.UNINDENT
.UNINDENT
.sp
green
.INDENT 0.0
.TP
.B color3, color11
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color3  #cecb00
color11 #fffd00
.EE
.UNINDENT
.UNINDENT
.sp
yellow
.INDENT 0.0
.TP
.B color4, color12
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color4  #0d73cc
color12 #1a8fff
.EE
.UNINDENT
.UNINDENT
.sp
blue
.INDENT 0.0
.TP
.B color5, color13
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color5  #cb1ed1
color13 #fd28ff
.EE
.UNINDENT
.UNINDENT
.sp
magenta
.INDENT 0.0
.TP
.B color6, color14
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color6  #0dcdcd
color14 #14ffff
.EE
.UNINDENT
.UNINDENT
.sp
cyan
.INDENT 0.0
.TP
.B color7, color15
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
color7  #dddddd
color15 #ffffff
.EE
.UNINDENT
.UNINDENT
.sp
white
.INDENT 0.0
.TP
.B mark1_foreground
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark1_foreground black
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 1
.INDENT 0.0
.TP
.B mark1_background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark1_background #98d3cb
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 1 (light steel blue)
.INDENT 0.0
.TP
.B mark2_foreground
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark2_foreground black
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 2
.INDENT 0.0
.TP
.B mark2_background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark2_background #f2dcd3
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 1 (beige)
.INDENT 0.0
.TP
.B mark3_foreground
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark3_foreground black
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 3
.INDENT 0.0
.TP
.B mark3_background
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
mark3_background #f274bc
.EE
.UNINDENT
.UNINDENT
.sp
Color for marks of type 3 (violet)
.SH Advanced
.INDENT 0.0
.TP
.B shell
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
shell .
.EE
.UNINDENT
.UNINDENT
.sp
The shell program to execute. The default value of \fB\&.\fP means to use
whatever shell is set as the default shell for the current user. Note that on
macOS if you change this, you might need to add \fB\-\-login\fP and
\fB\-\-interactive\fP to ensure that the shell starts in interactive mode and
reads its startup rc files. Environment variables are expanded in this setting.
.INDENT 0.0
.TP
.B editor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
editor .
.EE
.UNINDENT
.UNINDENT
.sp
The terminal based text editor (such as \fBvim\fP or \fBnano\fP) to
use when editing the kitty config file or similar tasks.
.sp
The default value of \fB\&.\fP means to use the environment variables
\X'tty: link #envvar-VISUAL'\fI\%VISUAL\fP\X'tty: link' and \X'tty: link #envvar-EDITOR'\fI\%EDITOR\fP\X'tty: link' in that order. If these variables aren\(aqt
set, kitty will run your \fI\%shell\fP (\fB$SHELL \-l \-i \-c env\fP) to see if
your shell startup rc files set \X'tty: link #envvar-VISUAL'\fI\%VISUAL\fP\X'tty: link' or \X'tty: link #envvar-EDITOR'\fI\%EDITOR\fP\X'tty: link'\&. If that
doesn\(aqt work, kitty will cycle through various known editors (\fBvim\fP,
\fBemacs\fP, etc.) and take the first one that exists on your system.
.INDENT 0.0
.TP
.B close_on_child_death
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
close_on_child_death no
.EE
.UNINDENT
.UNINDENT
.sp
Close the window when the child process (usually the shell) exits. With the default value
\fBno\fP, the terminal will remain open when the child exits as long as there
are still other processes outputting to the terminal (for example disowned or
backgrounded processes). When enabled with \fByes\fP, the window will close as
soon as the child process exits. Note that setting it to \fByes\fP means that
any background processes still using the terminal can fail silently because
their stdout/stderr/stdin no longer work.
.INDENT 0.0
.TP
.B remote_control_password
.UNINDENT
.sp
Allow other programs to control kitty using passwords. This option can be
specified multiple times to add multiple passwords. If no passwords are present
kitty will ask the user for permission if a program tries to use remote control
with a password. A password can also \fIoptionally\fP be associated with a set of
allowed remote control actions. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
remote_control_password \(dqmy passphrase\(dq get\-colors set\-colors focus\-window focus\-tab
.EE
.UNINDENT
.UNINDENT
.sp
Only the specified actions will be allowed when using this password.
Glob patterns can be used too, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
remote_control_password \(dqmy passphrase\(dq set\-tab\-* resize\-*
.EE
.UNINDENT
.UNINDENT
.sp
To get a list of available actions, run:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
kitten @ \-\-help
.EE
.UNINDENT
.UNINDENT
.sp
A set of actions to be allowed when no password is sent can be specified by
using an empty password. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
remote_control_password \(dq\(dq *\-colors
.EE
.UNINDENT
.UNINDENT
.sp
Finally, the path to a python module can be specified that provides a function
\fBis_cmd_allowed\fP that is used to check every remote control command.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
remote_control_password \(dqmy passphrase\(dq my_rc_command_checker.py
.EE
.UNINDENT
.UNINDENT
.sp
Relative paths are resolved from the kitty configuration directory.
See \X'tty: link #rc-custom-auth'\fI\%Customizing authorization with your own program\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B allow_remote_control
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
allow_remote_control no
.EE
.UNINDENT
.UNINDENT
.sp
Allow other programs to control kitty. If you turn this on, other programs can
control all aspects of kitty, including sending text to kitty windows, opening
new windows, closing windows, reading the content of windows, etc. Note that
this even works over SSH connections. The default setting of \fBno\fP
prevents any form of remote control. The meaning of the various values are:
.INDENT 0.0
.TP
.B \fBpassword\fP
Remote control requests received over both the TTY device and the socket
are confirmed based on passwords, see \fI\%remote_control_password\fP\&.
.TP
.B \fBsocket\-only\fP
Remote control requests received over a socket are accepted
unconditionally. Requests received over the TTY are denied.
See \fI\%listen_on\fP\&.
.TP
.B \fBsocket\fP
Remote control requests received over a socket are accepted
unconditionally. Requests received over the TTY are confirmed based on
password.
.TP
.B \fBno\fP
Remote control is completely disabled.
.TP
.B \fByes\fP
Remote control requests are always accepted.
.UNINDENT
.INDENT 0.0
.TP
.B listen_on
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
listen_on none
.EE
.UNINDENT
.UNINDENT
.sp
Listen to the specified socket for remote control connections. Note that this
will apply to all kitty instances. It can be overridden by the \X'tty: link #cmdoption-kitty-listen-on'\fI\%kitty
\-\-listen\-on\fP\X'tty: link' command line option. For UNIX sockets, such as
\fBunix:${TEMP}/mykitty\fP or \fBunix:@mykitty\fP (on Linux). Environment
variables are expanded and relative paths are resolved with respect to the
temporary directory. If \fB{kitty_pid}\fP is present, then it is replaced by
the PID of the kitty process, otherwise the PID of the kitty process is
appended to the value, with a hyphen. For TCP sockets such as
\fBtcp:localhost:0\fP a random port is always used even if a non\-zero port
number is specified.  See the help for \X'tty: link #cmdoption-kitty-listen-on'\fI\%kitty \-\-listen\-on\fP\X'tty: link' for more
details. Note that this will be ignored unless \fI\%allow_remote_control\fP is
set to either: \fByes\fP, \fBsocket\fP or \fBsocket\-only\fP\&.
Changing this option by reloading the config is not supported.
.INDENT 0.0
.TP
.B env
.UNINDENT
.sp
Specify the environment variables to be set in all child processes. Using the
name with an equal sign (e.g. \fBenv VAR=\fP) will set it to the empty string.
Specifying only the name (e.g. \fBenv VAR\fP) will remove the variable from
the child process\(aq environment. Note that environment variables are expanded
recursively, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
env VAR1=a
env VAR2=${HOME}/${VAR1}/b
.EE
.UNINDENT
.UNINDENT
.sp
The value of \fBVAR2\fP will be \fB<path to home directory>/a/b\fP\&.
.INDENT 0.0
.TP
.B watcher
.UNINDENT
.sp
Path to python file which will be loaded for \X'tty: link #watchers'\fI\%Watching launched windows\fP\X'tty: link'\&. Can be specified
more than once to load multiple watchers. The watchers will be added to every
kitty window. Relative paths are resolved relative to the kitty config
directory. Note that reloading the config will only affect windows created after
the reload.
.INDENT 0.0
.TP
.B exe_search_path
.UNINDENT
.sp
Control where kitty finds the programs to run. The default search order is:
First search the system wide \fBPATH\fP, then \fB~/.local/bin\fP and
\fB~/bin\fP\&. If still not found, the \fBPATH\fP defined in the login shell
after sourcing all its startup files is tried. Finally, if present, the
\fBPATH\fP specified by the \fI\%env\fP option is tried.
.sp
This option allows you to prepend, append, or remove paths from this search
order. It can be specified multiple times for multiple paths. A simple path will
be prepended to the search order. A path that starts with the \fB+\fP sign
will be append to the search order, after \fB~/bin\fP above. A path that
starts with the \fB\-\fP sign will be removed from the entire search order.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
exe_search_path /some/prepended/path
exe_search_path +/some/appended/path
exe_search_path \-/some/excluded/path
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B update_check_interval
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
update_check_interval 24
.EE
.UNINDENT
.UNINDENT
.sp
The interval to periodically check if an update to kitty is available (in
hours). If an update is found, a system notification is displayed informing you
of the available update. The default is to check every 24 hours, set to zero to
disable. Update checking is only done by the official binary builds. Distro
packages or source builds do not do update checking. Changing this option by
reloading the config is not supported.
.INDENT 0.0
.TP
.B startup_session
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
startup_session none
.EE
.UNINDENT
.UNINDENT
.sp
Path to a session file to use for all kitty instances. Can be overridden by
using the \X'tty: link #cmdoption-kitty-session'\fI\%kitty \-\-session\fP\X'tty: link' \fB=none\fP command line option for individual
instances. See \X'tty: link #sessions'\fI\%Startup Sessions\fP\X'tty: link' in the kitty documentation for details. Note that
relative paths are interpreted with respect to the kitty config directory.
Environment variables in the path are expanded. Changing this option by
reloading the config is not supported. Note that if kitty is invoked with command line
arguments specifying a command to run, this option is ignored.
.INDENT 0.0
.TP
.B clipboard_control
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clipboard_control write\-clipboard write\-primary read\-clipboard\-ask read\-primary\-ask
.EE
.UNINDENT
.UNINDENT
.sp
Allow programs running in kitty to read and write from the clipboard. You can
control exactly which actions are allowed. The possible actions are:
\fBwrite\-clipboard\fP, \fBread\-clipboard\fP, \fBwrite\-primary\fP,
\fBread\-primary\fP, \fBread\-clipboard\-ask\fP, \fBread\-primary\-ask\fP\&. The
default is to allow writing to the clipboard and primary selection and to ask
for permission when a program tries to read from the clipboard. Note that
disabling the read confirmation is a security risk as it means that any program,
even the ones running on a remote server via SSH can read your clipboard. See
also \fI\%clipboard_max_size\fP\&.
.INDENT 0.0
.TP
.B clipboard_max_size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clipboard_max_size 512
.EE
.UNINDENT
.UNINDENT
.sp
The maximum size (in MB) of data from programs running in kitty that will be
stored for writing to the system clipboard. A value of zero means no size limit
is applied. See also \fI\%clipboard_control\fP\&.
.INDENT 0.0
.TP
.B file_transfer_confirmation_bypass
.UNINDENT
.sp
The password that can be supplied to the \fI\%file transfer kitten\fP to skip the transfer confirmation prompt. This should only
be used when initiating transfers from trusted computers, over trusted networks
or encrypted transports, as it allows any programs running on the remote machine
to read/write to the local filesystem, without permission.
.INDENT 0.0
.TP
.B allow_hyperlinks
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
allow_hyperlinks yes
.EE
.UNINDENT
.UNINDENT
.sp
Process \X'tty: link #term-hyperlinks'\fI\%hyperlink\fP\X'tty: link' escape sequences (OSC 8). If disabled OSC
8 escape sequences are ignored. Otherwise they become clickable links, that you
can click with the mouse or by using the \fI\%hints kitten\fP\&.
The special value of \fBask\fP means that kitty will ask before opening the
link when clicked.
.INDENT 0.0
.TP
.B shell_integration
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
shell_integration enabled
.EE
.UNINDENT
.UNINDENT
.sp
Enable shell integration on supported shells. This enables features such as
jumping to previous prompts, browsing the output of the previous command in a
pager, etc. on supported shells. Set to \fBdisabled\fP to turn off shell
integration, completely. It is also possible to disable individual features, set
to a space separated list of these values: \fBno\-rc\fP, \fBno\-cursor\fP,
\fBno\-title\fP, \fBno\-cwd\fP, \fBno\-prompt\-mark\fP, \fBno\-complete\fP, \fBno\-sudo\fP\&.
See \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B allow_cloning
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
allow_cloning ask
.EE
.UNINDENT
.UNINDENT
.sp
Control whether programs running in the terminal can request new windows to be
created. The canonical example is \X'tty: link #clone-shell'\fI\%clone\-in\-kitty\fP\X'tty: link'\&. By
default, kitty will ask for permission for each clone request. Allowing cloning
unconditionally gives programs running in the terminal (including over SSH)
permission to execute arbitrary code, as the user who is running the terminal,
on the computer that the terminal is running on.
.INDENT 0.0
.TP
.B clone_source_strategies
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clone_source_strategies venv,conda,env_var,path
.EE
.UNINDENT
.UNINDENT
.sp
Control what shell code is sourced when running \fBclone\-in\-kitty\fP
in the newly cloned window. The supported strategies are:
.INDENT 0.0
.TP
.B \fBvenv\fP
Source the file \fB$VIRTUAL_ENV/bin/activate\fP\&. This is used by the
Python stdlib venv module and allows cloning venvs automatically.
.TP
.B \fBconda\fP
Run \fBconda activate $CONDA_DEFAULT_ENV\fP\&. This supports the virtual
environments created by \fBconda\fP\&.
.TP
.B \fBenv_var\fP
Execute the contents of the environment variable
\X'tty: link #envvar-KITTY_CLONE_SOURCE_CODE'\fI\%KITTY_CLONE_SOURCE_CODE\fP\X'tty: link' with \fBeval\fP\&.
.TP
.B \fBpath\fP
Source the file pointed to by the environment variable
\X'tty: link #envvar-KITTY_CLONE_SOURCE_PATH'\fI\%KITTY_CLONE_SOURCE_PATH\fP\X'tty: link'\&.
.UNINDENT
.sp
This option must be a comma separated list of the above values. Only the
first valid match, in the order specified, is sourced.
.INDENT 0.0
.TP
.B notify_on_cmd_finish
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
notify_on_cmd_finish never
.EE
.UNINDENT
.UNINDENT
.sp
Show a desktop notification when a long\-running command finishes
(needs \fI\%shell_integration\fP).
The possible values are:
.INDENT 0.0
.TP
.B \fBnever\fP
Never send a notification.
.TP
.B \fBunfocused\fP
Only send a notification when the window does not have keyboard focus.
.TP
.B \fBinvisible\fP
Only send a notification when the window both is unfocused and not visible
to the user, for example, because it is in an inactive tab or its OS window
is not currently active.
.TP
.B \fBalways\fP
Always send a notification, regardless of window state.
.UNINDENT
.sp
There are two optional arguments:
.sp
First, the minimum duration for what is considered a
long running command. The default is 5 seconds. Specify a second argument
to set the duration. For example: \fBinvisible 15\fP\&.
Do not set the value too small, otherwise a command that launches a new OS Window
and exits will spam a notification.
.sp
Second, the action to perform. The default is \fBnotify\fP\&. The possible values are:
.INDENT 0.0
.TP
.B \fBnotify\fP
Send a desktop notification.
.TP
.B \fBbell\fP
Ring the terminal bell.
.TP
.B \fBcommand\fP
Run a custom command. All subsequent arguments are the cmdline to run.
.UNINDENT
.sp
Some more examples:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# Send a notification when a command takes more than 5 seconds in an unfocused window
notify_on_cmd_finish unfocused
# Send a notification when a command takes more than 10 seconds in a invisible window
notify_on_cmd_finish invisible 10.0
# Ring a bell when a command takes more than 10 seconds in a invisible window
notify_on_cmd_finish invisible 10.0 bell
# Run \(aqnotify\-send\(aq when a command takes more than 10 seconds in a invisible window
# Here %c is replaced by the current command line and %s by the job exit code
notify_on_cmd_finish invisible 10.0 command notify\-send \(dqjob finished with status: %s\(dq %c
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B term
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
term xterm\-kitty
.EE
.UNINDENT
.UNINDENT
.sp
The value of the \X'tty: link #envvar-TERM'\fI\%TERM\fP\X'tty: link' environment variable to set. Changing this can
break many terminal programs, only change it if you know what you are doing, not
because you read some advice on \(dqStack Overflow\(dq to change it. The
\X'tty: link #envvar-TERM'\fI\%TERM\fP\X'tty: link' variable is used by various programs to get information about the
capabilities and behavior of the terminal. If you change it, depending on what
programs you run, and how different the terminal you are changing it to is,
various things from key\-presses, to colors, to various advanced features may not
work. Changing this option by reloading the config will only affect newly
created windows.
.INDENT 0.0
.TP
.B terminfo_type
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
terminfo_type path
.EE
.UNINDENT
.UNINDENT
.sp
The value of the \X'tty: link #envvar-TERMINFO'\fI\%TERMINFO\fP\X'tty: link' environment variable to set. This variable is
used by programs running in the terminal to search for terminfo databases. The default value
of \fBpath\fP causes kitty to set it to a filesystem location containing the
kitty terminfo database. A value of \fBdirect\fP means put the entire database into
the env var directly. This can be useful when connecting to containers, for example. But,
note that not all software supports this. A value of \fBnone\fP means do not touch the variable.
.INDENT 0.0
.TP
.B forward_stdio
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
forward_stdio no
.EE
.UNINDENT
.UNINDENT
.sp
Forward STDOUT and STDERR of the kitty process to child processes
as file descriptors 3 and 4. This is useful for debugging as it
allows child processes to print to kitty\(aqs STDOUT directly. For example,
\fBecho hello world >&3\fP in a shell will print to the parent kitty\(aqs
STDOUT. When enabled, this also sets the \fBKITTY_STDIO_FORWARDED=3\fP
environment variable so child processes know about the forwarding.
.INDENT 0.0
.TP
.B menu_map
.UNINDENT
.sp
Specify entries for various menus in kitty. Currently only the global menubar on macOS
is supported. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
menu_map global \(dqActions::Launch something special\(dq launch \-\-hold \-\-type=os\-window sh \-c \(dqecho hello world\(dq
.EE
.UNINDENT
.UNINDENT
.sp
This will create a menu entry named \(dqLaunch something special\(dq in an \(dqActions\(dq menu in the macOS global menubar.
Sub\-menus can be created by adding more levels separated by the \fB::\fP characters.
.SH Os specific tweaks
.INDENT 0.0
.TP
.B wayland_titlebar_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
wayland_titlebar_color system
.EE
.UNINDENT
.UNINDENT
.sp
The color of the kitty window\(aqs titlebar on Wayland systems with client
side window decorations such as GNOME. A value of \fBsystem\fP means to use
the default system colors, a value of \fBbackground\fP means to use the
background color of the currently active kitty window and finally you can use an
arbitrary color, such as \fB#12af59\fP or \fBred\fP\&.
.INDENT 0.0
.TP
.B macos_titlebar_color
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_titlebar_color system
.EE
.UNINDENT
.UNINDENT
.sp
The color of the kitty window\(aqs titlebar on macOS. A value of
\fBsystem\fP means to use the default system color, \fBlight\fP or
\fBdark\fP can also be used to set it explicitly. A value of
\fBbackground\fP means to use the background color of the currently active
window and finally you can use an arbitrary color, such as \fB#12af59\fP or
\fBred\fP\&. WARNING: This option works by using a hack when arbitrary color (or
\fBbackground\fP) is configured, as there is no proper Cocoa API for it. It
sets the background color of the entire window and makes the titlebar
transparent. As such it is incompatible with \fI\%background_opacity\fP\&. If you
want to use both, you are probably better off just hiding the titlebar with
\fI\%hide_window_decorations\fP\&.
.INDENT 0.0
.TP
.B macos_option_as_alt
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_option_as_alt no
.EE
.UNINDENT
.UNINDENT
.sp
Use the \fBOption\fP key as an \fBAlt\fP key on macOS. With this set to
\fBno\fP, kitty will use the macOS native \fBOption+Key\fP to enter Unicode
character behavior. This will break any \fBAlt+Key\fP keyboard shortcuts in
your terminal programs, but you can use the macOS Unicode input technique. You
can use the values: \fBleft\fP, \fBright\fP or \fBboth\fP to use only the
left, right or both \fBOption\fP keys as \fBAlt\fP, instead. Note that kitty
itself always treats \fBOption\fP the same as \fBAlt\fP\&. This means you cannot
use this option to configure different kitty shortcuts for \fBOption+Key\fP
vs. \fBAlt+Key\fP\&. Also, any kitty shortcuts using \fBOption/Alt+Key\fP will
take priority, so that any such key presses will not be passed to terminal
programs running inside kitty. Changing this option by reloading the config is
not supported.
.INDENT 0.0
.TP
.B macos_hide_from_tasks
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_hide_from_tasks no
.EE
.UNINDENT
.UNINDENT
.sp
Hide the kitty window from running tasks on macOS (\fB⌘+Tab\fP and the Dock).
Changing this option by reloading the config is not supported.
.INDENT 0.0
.TP
.B macos_quit_when_last_window_closed
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_quit_when_last_window_closed no
.EE
.UNINDENT
.UNINDENT
.sp
Have kitty quit when all the top\-level windows are closed on macOS. By default,
kitty will stay running, even with no open windows, as is the expected behavior
on macOS.
.INDENT 0.0
.TP
.B macos_window_resizable
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_window_resizable yes
.EE
.UNINDENT
.UNINDENT
.sp
Disable this if you want kitty top\-level OS windows to not be resizable on
macOS.
.INDENT 0.0
.TP
.B macos_thicken_font
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_thicken_font 0
.EE
.UNINDENT
.UNINDENT
.sp
Draw an extra border around the font with the given width, to increase
legibility at small font sizes on macOS. For example, a value of \fB0.75\fP
will result in rendering that looks similar to sub\-pixel antialiasing at common
font sizes. Note that in modern kitty, this option is obsolete (although still
supported). Consider using \fI\%text_composition_strategy\fP instead.
.INDENT 0.0
.TP
.B macos_traditional_fullscreen
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_traditional_fullscreen no
.EE
.UNINDENT
.UNINDENT
.sp
Use the macOS traditional full\-screen transition, that is faster, but less
pretty.
.INDENT 0.0
.TP
.B macos_show_window_title_in
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_show_window_title_in all
.EE
.UNINDENT
.UNINDENT
.sp
Control where the window title is displayed on macOS. A value of \fBwindow\fP
will show the title of the currently active window at the top of the macOS
window. A value of \fBmenubar\fP will show the title of the currently active
window in the macOS global menu bar, making use of otherwise wasted space. A
value of \fBall\fP will show the title in both places, and \fBnone\fP hides
the title. See \fI\%macos_menubar_title_max_length\fP for how to control the
length of the title in the menu bar.
.INDENT 0.0
.TP
.B macos_menubar_title_max_length
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_menubar_title_max_length 0
.EE
.UNINDENT
.UNINDENT
.sp
The maximum number of characters from the window title to show in the macOS
global menu bar. Values less than one means that there is no maximum limit.
.INDENT 0.0
.TP
.B macos_custom_beam_cursor
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_custom_beam_cursor no
.EE
.UNINDENT
.UNINDENT
.sp
Use a custom mouse cursor for macOS that is easier to see on both light
and dark backgrounds. Nowadays, the default macOS cursor already comes with a
white border. WARNING: this might make your mouse cursor invisible on
dual GPU machines. Changing this option by reloading the config is not supported.
.INDENT 0.0
.TP
.B macos_colorspace
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
macos_colorspace srgb
.EE
.UNINDENT
.UNINDENT
.sp
The colorspace in which to interpret terminal colors. The default of
\fBsrgb\fP will cause colors to match those seen in web browsers. The value of
\fBdefault\fP will use whatever the native colorspace of the display is.
The value of \fBdisplayp3\fP will use Apple\(aqs special snowflake display P3
color space, which will result in over saturated (brighter) colors with some
color shift. Reloading configuration will change this value only for newly
created OS windows.
.INDENT 0.0
.TP
.B linux_display_server
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
linux_display_server auto
.EE
.UNINDENT
.UNINDENT
.sp
Choose between Wayland and X11 backends. By default, an appropriate backend
based on the system state is chosen automatically. Set it to \fBx11\fP or
\fBwayland\fP to force the choice. Changing this option by reloading the
config is not supported.
.INDENT 0.0
.TP
.B wayland_enable_ime
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
wayland_enable_ime yes
.EE
.UNINDENT
.UNINDENT
.sp
Enable Input Method Extension on Wayland. This is typically used for
inputting text in East Asian languages. However, its implementation in
Wayland is often buggy and introduces latency into the input loop,
so disable this if you know you dont need it. Changing this option
by reloading the config is not supported, it will not have any effect.
.SH Keyboard shortcuts
.sp
Keys are identified simply by their lowercase Unicode characters. For example:
\fBa\fP for the \fBA\fP key, \fB[\fP for the left square bracket key, etc.
For functional keys, such as \fBEnter\fP or \fBEscape\fP, the names are present
at \X'tty: link #functional'\fI\%Functional key definitions\fP\X'tty: link'\&. For modifier keys, the names
are \fBctrl\fP (\fBcontrol\fP, \fB⌃\fP), \fBshift\fP (\fB⇧\fP), \fBalt\fP
(\fBopt\fP, \fBoption\fP, \fB⌥\fP), \fBsuper\fP (\fBcmd\fP, \fBcommand\fP,
\fB⌘\fP).
.sp
Simple shortcut mapping is done with the \fBmap\fP directive. For full details
on advanced mapping including modal and per application maps, see \fI\%Making your keyboard dance\fP\&.
Some quick examples to illustrate common tasks:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# unmap a keyboard shortcut, passing it to the program running in kitty
map kitty_mod+space
# completely ignore a keyboard event
map ctrl+alt+f1 discard_event
# combine multiple actions
map kitty_mod+e combine : new_window : next_layout
# multi\-key shortcuts
map ctrl+x>ctrl+y>z action
.EE
.UNINDENT
.UNINDENT
.sp
The full list of actions that can be mapped to key presses is available
\fI\%here\fP\&.
.INDENT 0.0
.TP
.B kitty_mod
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
kitty_mod ctrl+shift
.EE
.UNINDENT
.UNINDENT
.sp
Special modifier key alias for default shortcuts. You can change the value of
this option to alter all default shortcuts that use \fI\%kitty_mod\fP\&.
.INDENT 0.0
.TP
.B clear_all_shortcuts
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clear_all_shortcuts no
.EE
.UNINDENT
.UNINDENT
.sp
Remove all shortcut definitions up to this point. Useful, for instance, to
remove the default shortcuts.
.INDENT 0.0
.TP
.B action_alias
.UNINDENT
.sp
Has no default values. Example values are shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
action_alias launch_tab launch \-\-type=tab \-\-cwd=current
.EE
.UNINDENT
.UNINDENT
.sp
Define action aliases to avoid repeating the same options in multiple mappings.
Aliases can be defined for any action and will be expanded recursively. For
example, the above alias allows you to create mappings to launch a new tab in
the current working directory without duplication:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 launch_tab vim
map f2 launch_tab emacs
.EE
.UNINDENT
.UNINDENT
.sp
Similarly, to alias kitten invocation:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
action_alias hints kitten hints \-\-hints\-offset=0
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B kitten_alias
.UNINDENT
.sp
Has no default values. Example values are shown below:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
kitten_alias hints hints \-\-hints\-offset=0
.EE
.UNINDENT
.UNINDENT
.sp
Like \fI\%action_alias\fP above, but specifically for kittens. Generally, prefer
to use \fI\%action_alias\fP\&. This option is a legacy version, present for
backwards compatibility. It causes all invocations of the aliased kitten to be
substituted. So the example above will cause all invocations of the hints kitten
to have the \X'tty: link #cmdoption-kitty-kitten-hints-hints-offset'\fI\%\-\-hints\-offset=0\fP\X'tty: link'
option applied.
.SS Clipboard
.INDENT 0.0
.TP
.B Copy to clipboard
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+c copy_to_clipboard
map cmd+c copy_to_clipboard 🍎
.EE
.UNINDENT
.UNINDENT
.sp
There is also a \X'tty: link #action-copy_or_interrupt'\fI\%copy_or_interrupt\fP\X'tty: link' action that can be optionally mapped
to \fBCtrl+C\fP\&. It will copy only if there is a selection and send an
interrupt otherwise. Similarly, \X'tty: link #action-copy_and_clear_or_interrupt'\fI\%copy_and_clear_or_interrupt\fP\X'tty: link' will copy
and clear the selection or send an interrupt if there is no selection.
.INDENT 0.0
.TP
.B Paste from clipboard
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+v paste_from_clipboard
map cmd+v paste_from_clipboard 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Paste from selection
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+s paste_from_selection
map shift+insert paste_from_selection
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Pass selection to program
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+o pass_selection_to_program
.EE
.UNINDENT
.UNINDENT
.sp
You can also pass the contents of the current selection to any program with
\X'tty: link #action-pass_selection_to_program'\fI\%pass_selection_to_program\fP\X'tty: link'\&. By default, the system\(aqs open program is used,
but you can specify your own, the selection will be passed as a command line
argument to the program. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+o pass_selection_to_program firefox
.EE
.UNINDENT
.UNINDENT
.sp
You can pass the current selection to a terminal program running in a new kitty
window, by using the \fB@selection\fP placeholder:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+y new_window less @selection
.EE
.UNINDENT
.UNINDENT
.SS Scrolling
.INDENT 0.0
.TP
.B Scroll line up
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+up scroll_line_up
map ctrl+shift+k scroll_line_up
map opt+cmd+page_up scroll_line_up 🍎
map cmd+up scroll_line_up 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll line down
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+down scroll_line_down
map ctrl+shift+j scroll_line_down
map opt+cmd+page_down scroll_line_down 🍎
map cmd+down scroll_line_down 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll page up
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+page_up scroll_page_up
map cmd+page_up scroll_page_up 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll page down
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+page_down scroll_page_down
map cmd+page_down scroll_page_down 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll to top
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+home scroll_home
map cmd+home scroll_home 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll to bottom
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+end scroll_end
map cmd+end scroll_end 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Scroll to previous shell prompt
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+z scroll_to_prompt \-1
.EE
.UNINDENT
.UNINDENT
.sp
Use a parameter of \fB0\fP for \X'tty: link #action-scroll_to_prompt'\fI\%scroll_to_prompt\fP\X'tty: link' to scroll to the last
jumped to or the last clicked position. Requires \X'tty: link #shell-integration'\fI\%shell integration\fP\X'tty: link' to work.
.INDENT 0.0
.TP
.B Scroll to next shell prompt
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+x scroll_to_prompt 1
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Browse scrollback buffer in pager
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+h show_scrollback
.EE
.UNINDENT
.UNINDENT
.sp
You can pipe the contents of the current screen and history buffer as
\fBSTDIN\fP to an arbitrary program using \X'tty: link #cmdoption-launch-stdin-source'\fI\%launch \-\-stdin\-source\fP\X'tty: link'\&.
For example, the following opens the scrollback buffer in less in an
\X'tty: link #term-overlay'\fI\%overlay\fP\X'tty: link' window:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 launch \-\-stdin\-source=@screen_scrollback \-\-stdin\-add\-formatting \-\-type=overlay less +G \-R
.EE
.UNINDENT
.UNINDENT
.sp
For more details on piping screen and buffer contents to external programs,
see \fI\%The launch command\fP\&.
.INDENT 0.0
.TP
.B Browse output of the last shell command in pager
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+g show_last_command_output
.EE
.UNINDENT
.UNINDENT
.sp
You can also define additional shortcuts to get the command output.
For example, to get the first command output on screen:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 show_first_command_output_on_screen
.EE
.UNINDENT
.UNINDENT
.sp
To get the command output that was last accessed by a keyboard action or mouse
action:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 show_last_visited_command_output
.EE
.UNINDENT
.UNINDENT
.sp
You can pipe the output of the last command run in the shell using the
\X'tty: link #action-launch'\fI\%launch\fP\X'tty: link' action. For example, the following opens the output in less in an
\X'tty: link #term-overlay'\fI\%overlay\fP\X'tty: link' window:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 launch \-\-stdin\-source=@last_cmd_output \-\-stdin\-add\-formatting \-\-type=overlay less +G \-R
.EE
.UNINDENT
.UNINDENT
.sp
To get the output of the first command on the screen, use \fB@first_cmd_output_on_screen\fP\&.
To get the output of the last jumped to command, use \fB@last_visited_cmd_output\fP\&.
.sp
Requires \X'tty: link #shell-integration'\fI\%shell integration\fP\X'tty: link' to work.
.SS Window management
.INDENT 0.0
.TP
.B New window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+enter new_window
map cmd+enter new_window 🍎
.EE
.UNINDENT
.UNINDENT
.sp
You can open a new \X'tty: link #term-window'\fI\%kitty window\fP\X'tty: link' running an arbitrary program,
for example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+y launch mutt
.EE
.UNINDENT
.UNINDENT
.sp
You can open a new window with the current working directory set to the working
directory of the current window using:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+enter launch \-\-cwd=current
.EE
.UNINDENT
.UNINDENT
.sp
You can open a new window that is allowed to control kitty via
the kitty remote control facility with \X'tty: link #cmdoption-launch-allow-remote-control'\fI\%launch \-\-allow\-remote\-control\fP\X'tty: link'\&.
Any programs running in that window will be allowed to control kitty.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+enter launch \-\-allow\-remote\-control some_program
.EE
.UNINDENT
.UNINDENT
.sp
You can open a new window next to the currently active window or as the first
window, with:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+n launch \-\-location=neighbor
map ctrl+f launch \-\-location=first
.EE
.UNINDENT
.UNINDENT
.sp
For more details, see \fI\%The launch command\fP\&.
.INDENT 0.0
.TP
.B New OS window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+n new_os_window
map cmd+n new_os_window 🍎
.EE
.UNINDENT
.UNINDENT
.sp
Works like \X'tty: link #action-new_window'\fI\%new_window\fP\X'tty: link' above, except that it opens a top\-level \X'tty: link #term-os_window'\fI\%OS
window\fP\X'tty: link'\&. In particular you can use \X'tty: link #action-new_os_window_with_cwd'\fI\%new_os_window_with_cwd\fP\X'tty: link' to
open a window with the current working directory.
.INDENT 0.0
.TP
.B Close window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+w close_window
map shift+cmd+d close_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Next window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+] next_window
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Previous window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+[ previous_window
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Move window forward
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f move_window_forward
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Move window backward
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+b move_window_backward
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Move window to top
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+\(ga move_window_to_top
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Start resizing window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+r start_resizing_window
map cmd+r start_resizing_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B First window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+1 first_window
map cmd+1 first_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Second window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+2 second_window
map cmd+2 second_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Third window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+3 third_window
map cmd+3 third_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Fourth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+4 fourth_window
map cmd+4 fourth_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Fifth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+5 fifth_window
map cmd+5 fifth_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Sixth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+6 sixth_window
map cmd+6 sixth_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Seventh window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+7 seventh_window
map cmd+7 seventh_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Eighth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+8 eighth_window
map cmd+8 eighth_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Ninth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+9 ninth_window
map cmd+9 ninth_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Tenth window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+0 tenth_window
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Visually select and focus window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f7 focus_visible_window
.EE
.UNINDENT
.UNINDENT
.sp
Display overlay numbers and alphabets on the window, and switch the focus to the
window when you press the key. When there are only two windows, the focus will
be switched directly without displaying the overlay. You can change the overlay
characters and their order with option \fI\%visual_window_select_characters\fP\&.
.INDENT 0.0
.TP
.B Visually swap window with another
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f8 swap_with_window
.EE
.UNINDENT
.UNINDENT
.sp
Works like \X'tty: link #action-focus_visible_window'\fI\%focus_visible_window\fP\X'tty: link' above, but swaps the window.
.SS Tab management
.INDENT 0.0
.TP
.B Next tab
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+right next_tab
map shift+cmd+] next_tab 🍎
map ctrl+tab next_tab
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Previous tab
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+left previous_tab
map shift+cmd+[ previous_tab 🍎
map ctrl+shift+tab previous_tab
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B New tab
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+t new_tab
map cmd+t new_tab 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Close tab
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+q close_tab
map cmd+w close_tab 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Close OS window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map shift+cmd+w close_os_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Move tab forward
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+. move_tab_forward
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Move tab backward
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+, move_tab_backward
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Set tab title
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+alt+t set_tab_title
map shift+cmd+i set_tab_title 🍎
.EE
.UNINDENT
.UNINDENT
.sp
You can also create shortcuts to go to specific \X'tty: link #term-tab'\fI\%tabs\fP\X'tty: link', with
\fB1\fP being the first tab, \fB2\fP the second tab and \fB\-1\fP being the
previously active tab, and any number larger than the last tab being the last
tab:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+1 goto_tab 1
map ctrl+alt+2 goto_tab 2
.EE
.UNINDENT
.UNINDENT
.sp
Just as with \X'tty: link #action-new_window'\fI\%new_window\fP\X'tty: link' above, you can also pass the name of arbitrary
commands to run when using \X'tty: link #action-new_tab'\fI\%new_tab\fP\X'tty: link' and \X'tty: link #action-new_tab_with_cwd'\fI\%new_tab_with_cwd\fP\X'tty: link'\&. Finally,
if you want the new tab to open next to the current tab rather than at the
end of the tabs list, use:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+t new_tab !neighbor [optional cmd to run]
.EE
.UNINDENT
.UNINDENT
.SS Layout management
.INDENT 0.0
.TP
.B Next layout
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+l next_layout
.EE
.UNINDENT
.UNINDENT
.sp
You can also create shortcuts to switch to specific \X'tty: link #term-layout'\fI\%layouts\fP\X'tty: link':
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+t goto_layout tall
map ctrl+alt+s goto_layout stack
.EE
.UNINDENT
.UNINDENT
.sp
Similarly, to switch back to the previous layout:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+p last_used_layout
.EE
.UNINDENT
.UNINDENT
.sp
There is also a \X'tty: link #action-toggle_layout'\fI\%toggle_layout\fP\X'tty: link' action that switches to the named layout or
back to the previous layout if in the named layout. Useful to temporarily \(dqzoom\(dq
the active window by switching to the stack layout:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+z toggle_layout stack
.EE
.UNINDENT
.UNINDENT
.SS Font sizes
.sp
You can change the font size for all top\-level kitty OS windows at a time or
only the current one.
.INDENT 0.0
.TP
.B Increase font size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+equal change_font_size all +2.0
map ctrl+shift+plus change_font_size all +2.0
map ctrl+shift+kp_add change_font_size all +2.0
map cmd+plus change_font_size all +2.0 🍎
map cmd+equal change_font_size all +2.0 🍎
map shift+cmd+equal change_font_size all +2.0 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Decrease font size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+minus change_font_size all \-2.0
map ctrl+shift+kp_subtract change_font_size all \-2.0
map cmd+minus change_font_size all \-2.0 🍎
map shift+cmd+minus change_font_size all \-2.0 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Reset font size
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+backspace change_font_size all 0
map cmd+0 change_font_size all 0 🍎
.EE
.UNINDENT
.UNINDENT
.sp
To setup shortcuts for specific font sizes:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+f6 change_font_size all 10.0
.EE
.UNINDENT
.UNINDENT
.sp
To setup shortcuts to change only the current OS window\(aqs font size:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+f6 change_font_size current 10.0
.EE
.UNINDENT
.UNINDENT
.SS Select and act on visible text
.sp
Use the hints kitten to select text and either pass it to an external program or
insert it into the terminal or copy it to the clipboard.
.INDENT 0.0
.TP
.B Open URL
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+e open_url_with_hints
.EE
.UNINDENT
.UNINDENT
.sp
Open a currently visible URL using the keyboard. The program used to open the
URL is specified in \fI\%open_url_with\fP\&.
.INDENT 0.0
.TP
.B Insert selected path
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>f kitten hints \-\-type path \-\-program \-
.EE
.UNINDENT
.UNINDENT
.sp
Select a path/filename and insert it into the terminal. Useful, for instance to
run \fBgit\fP commands on a filename output from a previous \fBgit\fP
command.
.INDENT 0.0
.TP
.B Open selected path
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>shift+f kitten hints \-\-type path
.EE
.UNINDENT
.UNINDENT
.sp
Select a path/filename and open it with the default open program.
.INDENT 0.0
.TP
.B Insert selected line
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>l kitten hints \-\-type line \-\-program \-
.EE
.UNINDENT
.UNINDENT
.sp
Select a line of text and insert it into the terminal. Useful for the output of
things like: \fBls \-1\fP\&.
.INDENT 0.0
.TP
.B Insert selected word
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>w kitten hints \-\-type word \-\-program \-
.EE
.UNINDENT
.UNINDENT
.sp
Select words and insert into terminal.
.INDENT 0.0
.TP
.B Insert selected hash
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>h kitten hints \-\-type hash \-\-program \-
.EE
.UNINDENT
.UNINDENT
.sp
Select something that looks like a hash and insert it into the terminal. Useful
with \fBgit\fP, which uses SHA1 hashes to identify commits.
.INDENT 0.0
.TP
.B Open the selected file at the selected line
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>n kitten hints \-\-type linenum
.EE
.UNINDENT
.UNINDENT
.sp
Select something that looks like \fBfilename:linenum\fP and open it in
your default editor at the specified line number.
.INDENT 0.0
.TP
.B Open the selected hyperlink
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+p>y kitten hints \-\-type hyperlink
.EE
.UNINDENT
.UNINDENT
.sp
Select a \X'tty: link #term-hyperlinks'\fI\%hyperlink\fP\X'tty: link' (i.e. a URL that has been marked as such
by the terminal program, for example, by \fBls \-\-hyperlink=auto\fP).
.sp
The hints kitten has many more modes of operation that you can map to different
shortcuts. For a full description see \fI\%hints kitten\fP\&.
.SS Miscellaneous
.INDENT 0.0
.TP
.B Show documentation
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f1 show_kitty_doc overview
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Toggle fullscreen
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f11 toggle_fullscreen
map ctrl+cmd+f toggle_fullscreen 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Toggle maximized
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f10 toggle_maximized
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Toggle macOS secure keyboard entry
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map opt+cmd+s toggle_macos_secure_keyboard_entry 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Unicode input
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+u kitten unicode_input
map ctrl+cmd+space kitten unicode_input 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Edit config file
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f2 edit_config_file
map cmd+, edit_config_file 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Open the kitty command shell
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+escape kitty_shell window
.EE
.UNINDENT
.UNINDENT
.sp
Open the kitty shell in a new \fBwindow\fP / \fBtab\fP / \fBoverlay\fP /
\fBos_window\fP to control kitty using commands.
.INDENT 0.0
.TP
.B Increase background opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+a>m set_background_opacity +0.1
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Decrease background opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+a>l set_background_opacity \-0.1
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Make background fully opaque
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+a>1 set_background_opacity 1
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Reset background opacity
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+a>d set_background_opacity default
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Reset the terminal
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+delete clear_terminal reset active
map opt+cmd+r clear_terminal reset active 🍎
.EE
.UNINDENT
.UNINDENT
.sp
You can create shortcuts to clear/reset the terminal. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# Reset the terminal
map f1 clear_terminal reset active
# Clear the terminal screen by erasing all contents
map f1 clear_terminal clear active
# Clear the terminal scrollback by erasing it
map f1 clear_terminal scrollback active
# Scroll the contents of the screen into the scrollback
map f1 clear_terminal scroll active
# Clear everything on screen up to the line with the cursor or the start of the current prompt (needs shell integration)
map f1 clear_terminal to_cursor active
# Same as above except cleared lines are moved into scrollback
map f1 clear_terminal to_cursor_scroll active
.EE
.UNINDENT
.UNINDENT
.sp
If you want to operate on all kitty windows instead of just the current one, use
all instead of active\&.
.sp
Some useful functions that can be defined in the shell rc files to perform various kinds of
clearing of the current window:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
clear\-only\-screen() {
    printf \(dq\ee[H\ee[2J\(dq
}

clear\-screen\-and\-scrollback() {
    printf \(dq\ee[H\ee[3J\(dq
}

clear\-screen\-saving\-contents\-in\-scrollback() {
    printf \(dq\ee[H\ee[22J\(dq
}
.EE
.UNINDENT
.UNINDENT
.sp
For instance, using these escape codes, it is possible to remap \fBCtrl+L\fP
to both scroll the current screen contents into the scrollback buffer and clear
the screen, instead of just clearing the screen. For ZSH, in \fB~/.zshrc\fP, add:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
ctrl_l() {
    builtin print \-rn \-\- $\(aq\er\ee[0J\ee[H\ee[22J\(aq >\(dq$TTY\(dq
    builtin zle .reset\-prompt
    builtin zle \-R
}
zle \-N ctrl_l
bindkey \(aq^l\(aq ctrl_l
.EE
.UNINDENT
.UNINDENT
.sp
Alternatively, you can just add \fBmap ctrl+l clear_terminal to_cursor_scroll active\fP to \fBkitty.conf\fP which
works with no changes to the shell rc files, but only clears up to the prompt, it does not clear anytext at the prompt itself.
.INDENT 0.0
.TP
.B Clear up to cursor line
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map cmd+k clear_terminal to_cursor active 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Reload kitty.conf
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f5 load_config_file
map ctrl+cmd+, load_config_file 🍎
.EE
.UNINDENT
.UNINDENT
.sp
Reload \fBkitty.conf\fP, applying any changes since the last time it was
loaded. Note that a handful of options cannot be dynamically changed and
require a full restart of kitty. Particularly, when changing shortcuts for
actions located on the macOS global menu bar, a full restart is needed. You can
also map a keybinding to load a different config file, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f5 load_config /path/to/alternative/kitty.conf
.EE
.UNINDENT
.UNINDENT
.sp
Note that all options from the original \fBkitty.conf\fP are discarded, in
other words the new configuration \fIreplace\fP the old ones.
.INDENT 0.0
.TP
.B Debug kitty configuration
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+shift+f6 debug_config
map opt+cmd+, debug_config 🍎
.EE
.UNINDENT
.UNINDENT
.sp
Show details about exactly what configuration kitty is running with and its host
environment. Useful for debugging issues.
.INDENT 0.0
.TP
.B Send arbitrary text on key presses
.UNINDENT
.sp
You can tell kitty to send arbitrary (UTF\-8) encoded text to the client program
when pressing specified shortcut keys. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+alt+a send_text all Special text
.EE
.UNINDENT
.UNINDENT
.sp
This will send \(dqSpecial text\(dq when you press the \fBCtrl+Alt+A\fP key
combination. The text to be sent decodes \X'tty: link https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html'\fI\%ANSI C escapes\fP\X'tty: link'
so you can use escapes like \fB\ee\fP to send control codes or \fB\eu21fb\fP to send
Unicode characters (or you can just input the Unicode characters directly as
UTF\-8 text). You can use \fBkitten show_key\fP to get the key escape
codes you want to emulate.
.sp
The first argument to \fBsend_text\fP is the keyboard modes in which to
activate the shortcut. The possible values are \fBnormal\fP,
\fBapplication\fP, \fBkitty\fP or a comma separated combination of them.
The modes \fBnormal\fP and \fBapplication\fP refer to the DECCKM
cursor key mode for terminals, and \fBkitty\fP refers to the kitty extended
keyboard protocol. The special value \fBall\fP means all of them.
.sp
Some more examples:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# Output a word and move the cursor to the start of the line (like typing and pressing Home)
map ctrl+alt+a send_text normal Word\ee[H
map ctrl+alt+a send_text application Word\eeOH
# Run a command at a shell prompt (like typing the command and pressing Enter)
map ctrl+alt+a send_text normal,application some command with arguments\er
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Open kitty Website
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map shift+cmd+/ open_url https://sw.kovidgoyal.net/kitty/ 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Hide macOS kitty application
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map cmd+h hide_macos_app 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Hide macOS other applications
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map opt+cmd+h hide_macos_other_apps 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Minimize macOS window
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map cmd+m minimize_macos_window 🍎
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Quit kitty
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map cmd+q quit 🍎
.EE
.UNINDENT
.UNINDENT
.SH Sample kitty.conf
.sp
You can edit a fully commented sample kitty.conf by pressing the
\fI\%ctrl+shift+f2\fP shortcut in kitty. This will generate a config file
with full documentation and all settings commented out. If you have a
pre\-existing \fBkitty.conf\fP, then that will be used instead, delete it to
see the sample file.
.sp
A default configuration file can also be generated by running:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
kitty +runpy \(aqfrom kitty.config import *; print(commented_out_default_config())\(aq
.EE
.UNINDENT
.UNINDENT
.sp
This will print the commented out default config file to \fBSTDOUT\fP\&.
.SH All mappable actions
.sp
See the \fI\%list of all the things you can make |kitty| can do\fP\&.
.SS Mappable actions
.sp
The actions described below can be mapped to any key press or mouse action
using the \fBmap\fP and \fBmouse_map\fP directives in \fBkitty.conf\fP\&. For
configuration examples, see the default shortcut links for each action.
To read about keyboard mapping in more detail, see \fI\%Making your keyboard dance\fP\&.
.SS Copy/paste
.INDENT 0.0
.TP
.B clear_selection
.UNINDENT
.sp
Clear the current selection
.INDENT 0.0
.TP
.B copy_and_clear_or_interrupt
.UNINDENT
.sp
Copy the selected text from the active window to the clipboard and clear selection, if no selection, send SIGINT (aka \fBctrl+c\fP)
.INDENT 0.0
.TP
.B copy_ansi_to_clipboard
.UNINDENT
.sp
Copy the selected text from the active window to the clipboard with ANSI formatting codes
.INDENT 0.0
.TP
.B copy_or_interrupt
.UNINDENT
.sp
Copy the selected text from the active window to the clipboard, if no selection, send SIGINT (aka \fBctrl+c\fP)
.INDENT 0.0
.TP
.B copy_to_clipboard
.UNINDENT
.sp
Copy the selected text from the active window to the clipboard
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Copy-to-clipboard'\fI\%ctrl+shift+c\fP\X'tty: link'
.INDENT 0.0
.TP
.B pass_selection_to_program
.UNINDENT
.sp
Pass the selected text from the active window to the specified program
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Pass-selection-to-program'\fI\%ctrl+shift+o\fP\X'tty: link'
.INDENT 0.0
.TP
.B paste
.UNINDENT
.sp
Paste the specified text into the current window. ANSI C escapes are decoded.
.INDENT 0.0
.TP
.B show_first_command_output_on_screen
.UNINDENT
.sp
Show output from the first shell command on screen in a pager like less
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.INDENT 0.0
.TP
.B show_last_command_output
.UNINDENT
.sp
Show output from the last shell command in a pager like less
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Browse-output-of-the-last-shell-command-in-pager'\fI\%ctrl+shift+g\fP\X'tty: link'
.INDENT 0.0
.TP
.B show_last_non_empty_command_output
.UNINDENT
.sp
Show the last non\-empty output from a shell command in a pager like less
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.INDENT 0.0
.TP
.B show_last_visited_command_output
.UNINDENT
.sp
Show the first command output below the last scrolled position via scroll_to_prompt
.sp
or the last mouse clicked command output in a pager like less
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.INDENT 0.0
.TP
.B show_scrollback
.UNINDENT
.sp
Show scrollback in a pager like less
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Browse-scrollback-buffer-in-pager'\fI\%ctrl+shift+h\fP\X'tty: link'
.INDENT 0.0
.TP
.B copy_to_buffer
.UNINDENT
.sp
Copy the selection from the active window to the specified buffer
.sp
See \X'tty: link #cpbuf'\fI\%Multiple copy/paste buffers\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B paste_from_buffer
.UNINDENT
.sp
Paste from the specified buffer to the active window
.sp
See \X'tty: link #cpbuf'\fI\%Multiple copy/paste buffers\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B paste_from_clipboard
.UNINDENT
.sp
Paste from the clipboard to the active window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Paste-from-clipboard'\fI\%ctrl+shift+v\fP\X'tty: link'
.INDENT 0.0
.TP
.B paste_from_selection
.UNINDENT
.sp
Paste from the primary selection, if present, otherwise the clipboard to the active window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Paste-from-selection'\fI\%ctrl+shift+s\fP\X'tty: link'
.SS Debugging
.INDENT 0.0
.TP
.B dump_lines_with_attrs
.UNINDENT
.sp
Show a dump of the current lines in the scrollback + screen with their line attributes
.INDENT 0.0
.TP
.B close_shared_ssh_connections
.UNINDENT
.sp
Close all shared SSH connections
.sp
See \X'tty: link #opt-kitten-ssh.share_connections'\fI\%share_connections\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B debug_config
.UNINDENT
.sp
Show the effective configuration kitty is running with
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Debug-kitty-configuration'\fI\%ctrl+shift+f6\fP\X'tty: link'
.INDENT 0.0
.TP
.B show_kitty_env_vars
.UNINDENT
.sp
Show the environment variables that the kitty process sees
.SS Layouts
.INDENT 0.0
.TP
.B goto_layout
.UNINDENT
.sp
Switch to the named layout
.sp
In case there are multiple layouts with the same name and different options,
specify the full layout definition or a unique prefix of the full definition.
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 goto_layout tall
map f2 goto_layout fat:bias=20
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B last_used_layout
.UNINDENT
.sp
Go to the previously used layout
.INDENT 0.0
.TP
.B layout_action
.UNINDENT
.sp
Perform a layout specific action. See \fI\%Arrange windows\fP for details
.INDENT 0.0
.TP
.B next_layout
.UNINDENT
.sp
Go to the next enabled layout. Can optionally supply an integer to jump by the specified number.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Next-layout'\fI\%ctrl+shift+l\fP\X'tty: link'
.INDENT 0.0
.TP
.B toggle_layout
.UNINDENT
.sp
Toggle the named layout
.sp
Switches to the named layout if another layout is current, otherwise
switches to the last used layout. Useful to \(dqzoom\(dq a window temporarily
by switching to the stack layout. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 toggle_layout stack
.EE
.UNINDENT
.UNINDENT
.SS Marks
.INDENT 0.0
.TP
.B remove_marker
.UNINDENT
.sp
Remove a previously created marker
.INDENT 0.0
.TP
.B scroll_to_mark
.UNINDENT
.sp
Scroll to the next or previous mark of the specified type
.INDENT 0.0
.TP
.B toggle_marker
.UNINDENT
.sp
Toggle the current marker on/off
.INDENT 0.0
.TP
.B create_marker
.UNINDENT
.sp
Create a new marker
.SS Miscellaneous
.INDENT 0.0
.TP
.B send_key
.UNINDENT
.sp
Send the specified keys to the active window.
.sp
Note that the key will be sent only if the current keyboard mode of the program running in the terminal supports it.
Both key press and key release are sent. First presses for all specified keys and then releases in reverse order.
To send a pattern of press and release for multiple keys use the \fI\%combine\fP action. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 send_key ctrl+x alt+y
map f1 combine : send_key ctrl+x : send_key alt+y
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B send_text
.UNINDENT
.sp
Send the specified text to the active window
.sp
See \X'tty: link #shortcut-kitty.Send-arbitrary-text-on-key-presses'\fI\%send_text\fP\X'tty: link' for details.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Send-arbitrary-text-on-key-presses'\fI\%ctrl+shift+alt+h\fP\X'tty: link'
.INDENT 0.0
.TP
.B show_kitty_doc
.UNINDENT
.sp
Display the specified kitty documentation, preferring a local copy, if found.
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# show the config docs
map f1 show_kitty_doc conf
# show the ssh kitten docs
map f1 show_kitty_doc kittens/ssh
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Show-documentation'\fI\%ctrl+shift+f1\fP\X'tty: link'
.INDENT 0.0
.TP
.B signal_child
.UNINDENT
.sp
Send the specified SIGNAL to the foreground process in the active window
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 signal_child SIGTERM
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B clear_terminal
.UNINDENT
.sp
Clear the terminal
.sp
See \X'tty: link #shortcut-kitty.Reset-the-terminal'\fI\%reset_terminal\fP\X'tty: link' for details. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# Reset the terminal
map f1 clear_terminal reset active
# Clear the terminal screen by erasing all contents
map f1 clear_terminal clear active
# Clear the terminal scrollback by erasing it
map f1 clear_terminal scrollback active
# Scroll the contents of the screen into the scrollback
map f1 clear_terminal scroll active
# Clear everything on screen up to the line with the cursor or the start of the current prompt (needs shell integration)
# Useful for clearing the screen up to the shell prompt and moving the shell prompt to the top of the screen.
map f1 clear_terminal to_cursor active
# Same as above except cleared lines are moved into scrollback
map f1 clear_terminal to_cursor_scroll active
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Clear-up-to-cursor-line'\fI\%cmd+k\fP\X'tty: link', \X'tty: link #shortcut-kitty.Reset-the-terminal'\fI\%ctrl+shift+delete\fP\X'tty: link'
.INDENT 0.0
.TP
.B combine
.UNINDENT
.sp
Combine multiple actions and map to a single keypress
.sp
The syntax is:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map key combine <separator> action1 <separator> action2 <separator> action3 ...
.EE
.UNINDENT
.UNINDENT
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map kitty_mod+e combine : new_window : next_layout
map kitty_mod+e combine | new_tab | goto_tab \-1
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B disable_ligatures_in
.UNINDENT
.sp
Turn on/off ligatures in the specified window
.sp
See \X'tty: link #opt-kitty.disable_ligatures'\fI\%disable_ligatures\fP\X'tty: link' for details
.INDENT 0.0
.TP
.B discard_event
.UNINDENT
.sp
Discard this event completely ignoring it
.INDENT 0.0
.TP
.B edit_config_file
.UNINDENT
.sp
Edit the kitty.conf config file in your favorite text editor
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Edit-config-file'\fI\%ctrl+shift+f2\fP\X'tty: link'
.INDENT 0.0
.TP
.B hide_macos_app
.UNINDENT
.sp
Hide macOS kitty application
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Hide-macOS-kitty-application'\fI\%cmd+h\fP\X'tty: link'
.INDENT 0.0
.TP
.B hide_macos_other_apps
.UNINDENT
.sp
Hide macOS other applications
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Hide-macOS-other-applications'\fI\%opt+cmd+h\fP\X'tty: link'
.INDENT 0.0
.TP
.B input_unicode_character
.UNINDENT
.sp
Input an arbitrary unicode character. See \fI\%Unicode input\fP for details.
.INDENT 0.0
.TP
.B kitten
.UNINDENT
.sp
Run the specified kitten. See \fI\%Custom kittens\fP for details
.sp
Default shortcuts using this action:
.INDENT 0.0
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Insert-selected-hash'\fI\%ctrl+shift+p>h\fP\X'tty: link' Insert selected hash
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Insert-selected-line'\fI\%ctrl+shift+p>l\fP\X'tty: link' Insert selected line
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Insert-selected-path'\fI\%ctrl+shift+p>f\fP\X'tty: link' Insert selected path
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Insert-selected-word'\fI\%ctrl+shift+p>w\fP\X'tty: link' Insert selected word
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Open-selected-path'\fI\%ctrl+shift+p>shift+f\fP\X'tty: link' Open selected path
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Open-the-selected-file-at-the-selected-line'\fI\%ctrl+shift+p>n\fP\X'tty: link' Open the selected file at the selected line
.IP \(bu 2
\fI\%Hints\fP \- \X'tty: link #shortcut-kitty.Open-the-selected-hyperlink'\fI\%ctrl+shift+p>y\fP\X'tty: link' Open the selected hyperlink
.IP \(bu 2
\fI\%Unicode input\fP \- \X'tty: link #shortcut-kitty.Unicode-input'\fI\%ctrl+shift+u\fP\X'tty: link' Unicode input
.UNINDENT
.INDENT 0.0
.TP
.B kitty_shell
.UNINDENT
.sp
Run the kitty shell to control kitty with commands
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Open-the-kitty-command-shell'\fI\%ctrl+shift+escape\fP\X'tty: link'
.INDENT 0.0
.TP
.B launch
.UNINDENT
.sp
Launch the specified program in a new window/tab/etc.
.sp
See \fI\%The launch command\fP for details
.INDENT 0.0
.TP
.B load_config_file
.UNINDENT
.sp
Reload the config file
.sp
If mapped without arguments reloads the default config file, otherwise loads
the specified config files, in order. Loading a config file \fIreplaces\fP all
config options. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f5 load_config_file /path/to/some/kitty.conf
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Reload-kitty.conf'\fI\%ctrl+shift+f5\fP\X'tty: link'
.INDENT 0.0
.TP
.B minimize_macos_window
.UNINDENT
.sp
Minimize macOS window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Minimize-macOS-window'\fI\%cmd+m\fP\X'tty: link'
.INDENT 0.0
.TP
.B open_url
.UNINDENT
.sp
Open the specified URL
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Open-kitty-Website'\fI\%shift+cmd+/\fP\X'tty: link'
.INDENT 0.0
.TP
.B open_url_with_hints
.UNINDENT
.sp
Click a URL using the keyboard
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Open-URL'\fI\%ctrl+shift+e\fP\X'tty: link'
.INDENT 0.0
.TP
.B pop_keyboard_mode
.UNINDENT
.sp
End the current keyboard mode switching to the previous mode.
.INDENT 0.0
.TP
.B push_keyboard_mode
.UNINDENT
.sp
Switch to the specified keyboard mode, pushing it onto the stack of keyboard modes.
.INDENT 0.0
.TP
.B remote_control
.UNINDENT
.sp
Run a remote control command without needing to allow remote control
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 remote_control set\-spacing margin=30
.EE
.UNINDENT
.UNINDENT
.sp
See \X'tty: link #rc-mapping'\fI\%Mapping key presses to remote control commands\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B remote_control_script
.UNINDENT
.sp
Run a remote control script without needing to allow remote control
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 remote_control_script /path/to/script arg1 arg2 ...
.EE
.UNINDENT
.UNINDENT
.sp
See \X'tty: link #rc-mapping'\fI\%Mapping key presses to remote control commands\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B set_colors
.UNINDENT
.sp
Change colors in the specified windows
.sp
For details, see \X'tty: link #at-set-colors'\fI\%kitten @ set\-colors\fP\X'tty: link'\&. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f5 set_colors \-\-configured /path/to/some/config/file/colors.conf
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B show_error
.UNINDENT
.sp
Show an error message with the specified title and text
.INDENT 0.0
.TP
.B sleep
.UNINDENT
.sp
Sleep for the specified time period. Suffix can be s for seconds, m, for minutes, h for hours and d for days. The time can be fractional.
.INDENT 0.0
.TP
.B toggle_macos_secure_keyboard_entry
.UNINDENT
.sp
Toggle macOS secure keyboard entry
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Toggle-macOS-secure-keyboard-entry'\fI\%opt+cmd+s\fP\X'tty: link'
.INDENT 0.0
.TP
.B no_op
.UNINDENT
.sp
Unbind a shortcut
.sp
Mapping a shortcut to no_op causes kitty to not intercept the key stroke anymore, instead passing it to the program running inside it.
.SS Mouse actions
.INDENT 0.0
.TP
.B mouse_click_url
.UNINDENT
.sp
Click the URL under the mouse
.INDENT 0.0
.TP
.B mouse_click_url_or_select
.UNINDENT
.sp
Click the URL under the mouse only if the screen has no selection
.INDENT 0.0
.TP
.B mouse_handle_click
.UNINDENT
.sp
Handle a mouse click
.sp
Try to perform the specified actions one after the other till one of them is successful.
Supported actions are:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
selection \- check for a selection and if one exists abort processing
link \- if a link exists under the mouse, click it
prompt \- if the mouse click happens at a shell prompt move the cursor to the mouse location
.EE
.UNINDENT
.UNINDENT
.sp
For examples, see \X'tty: link #conf-kitty-mouse-mousemap'\fI\%Mouse actions\fP\X'tty: link'
.INDENT 0.0
.TP
.B mouse_select_command_output
.UNINDENT
.sp
Select clicked command output
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.INDENT 0.0
.TP
.B mouse_selection
.UNINDENT
.sp
Manipulate the selection based on the current mouse position
.sp
For examples, see \X'tty: link #conf-kitty-mouse-mousemap'\fI\%Mouse actions\fP\X'tty: link'
.INDENT 0.0
.TP
.B mouse_show_command_output
.UNINDENT
.sp
Show clicked command output in a pager like less
.sp
Requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link' to work
.INDENT 0.0
.TP
.B paste_selection
.UNINDENT
.sp
Paste the current primary selection
.INDENT 0.0
.TP
.B paste_selection_or_clipboard
.UNINDENT
.sp
Paste the current primary selection or the clipboard if no selection is present
.SS Scrolling
.INDENT 0.0
.TP
.B scroll_end
.UNINDENT
.sp
Scroll to the bottom of the scrollback buffer when in main screen
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-to-bottom'\fI\%ctrl+shift+end\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_home
.UNINDENT
.sp
Scroll to the top of the scrollback buffer when in main screen
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-to-top'\fI\%ctrl+shift+home\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_line_down
.UNINDENT
.sp
Scroll down by one line when in main screen. To scroll by different amounts, you can map the remote_control scroll\-window action.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-line-down'\fI\%ctrl+shift+down\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_line_up
.UNINDENT
.sp
Scroll up by one line when in main screen. To scroll by different amounts, you can map the remote_control scroll\-window action.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-line-up'\fI\%ctrl+shift+up\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_page_down
.UNINDENT
.sp
Scroll down by one page when in main screen. To scroll by different amounts, you can map the remote_control scroll\-window action.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-page-down'\fI\%ctrl+shift+page_down\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_page_up
.UNINDENT
.sp
Scroll up by one page when in main screen. To scroll by different amounts, you can map the remote_control scroll\-window action.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-page-up'\fI\%ctrl+shift+page_up\fP\X'tty: link'
.INDENT 0.0
.TP
.B scroll_prompt_to_bottom
.UNINDENT
.sp
Scroll prompt to the bottom of the screen, filling in extra lines from the scrollback buffer, when in main screen
.INDENT 0.0
.TP
.B scroll_prompt_to_top
.UNINDENT
.sp
Scroll prompt to the top of the screen, filling screen with empty lines, when in main screen. To avoid putting the lines above the prompt into the scrollback use scroll_prompt_to_top y
.INDENT 0.0
.TP
.B scroll_to_prompt
.UNINDENT
.sp
Scroll to the previous/next shell command prompt
.sp
Allows easy jumping from one command to the next. Requires working
\X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link'\&. Takes a single, optional, number as argument which is
the number of prompts to jump, negative values jump up and positive values jump down.
A value of zero will jump to the last prompt visited by this action.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+p scroll_to_prompt \-1  # jump to previous
map ctrl+n scroll_to_prompt 1   # jump to next
map ctrl+o scroll_to_prompt 0   # jump to last visited
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Scroll-to-next-shell-prompt'\fI\%ctrl+shift+x\fP\X'tty: link', \X'tty: link #shortcut-kitty.Scroll-to-previous-shell-prompt'\fI\%ctrl+shift+z\fP\X'tty: link'
.SS Tab management
.INDENT 0.0
.TP
.B close_other_tabs_in_os_window
.UNINDENT
.sp
Close all the tabs in the current OS window other than the currently active tab
.INDENT 0.0
.TP
.B close_tab
.UNINDENT
.sp
Close the current tab
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Close-tab'\fI\%ctrl+shift+q\fP\X'tty: link'
.INDENT 0.0
.TP
.B detach_tab
.UNINDENT
.sp
Detach a tab, moving it to another OS Window
.sp
See \X'tty: link #detach-window'\fI\%detaching windows\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B goto_tab
.UNINDENT
.sp
Go to the specified tab, by number, starting with 1
.sp
Zero and negative numbers go to previously active tabs.
Use the \fI\%select_tab\fP action to interactively select a tab
to go to.
.INDENT 0.0
.TP
.B move_tab_backward
.UNINDENT
.sp
Move the active tab backward
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Move-tab-backward'\fI\%ctrl+shift+,\fP\X'tty: link'
.INDENT 0.0
.TP
.B move_tab_forward
.UNINDENT
.sp
Move the active tab forward
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Move-tab-forward'\fI\%ctrl+shift+.\fP\X'tty: link'
.INDENT 0.0
.TP
.B new_tab
.UNINDENT
.sp
Create a new tab
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.New-tab'\fI\%ctrl+shift+t\fP\X'tty: link'
.INDENT 0.0
.TP
.B new_tab_with_cwd
.UNINDENT
.sp
Create a new tab with working directory for the window in it set to the same as the active window
.INDENT 0.0
.TP
.B next_tab
.UNINDENT
.sp
Make the next tab active
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Next-tab'\fI\%ctrl+shift+right\fP\X'tty: link'
.INDENT 0.0
.TP
.B previous_tab
.UNINDENT
.sp
Make the previous tab active
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Previous-tab'\fI\%ctrl+shift+left\fP\X'tty: link'
.INDENT 0.0
.TP
.B select_tab
.UNINDENT
.sp
Interactively select a tab to switch to
.INDENT 0.0
.TP
.B set_tab_title
.UNINDENT
.sp
Change the title of the active tab interactively, by typing in the new title.
.sp
If you specify an argument to this action then that is used as the title instead of asking for it.
Use the empty string (\(dq\(dq) to reset the title to default. Use a space (\(dq \(dq) to indicate that the
prompt should not be pre\-filled. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# interactive usage
map f1 set_tab_title
# set a specific title
map f2 set_tab_title some title
# reset to default
map f3 set_tab_title \(dq\(dq
# interactive usage without prefilled prompt
map f3 set_tab_title \(dq \(dq
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Set-tab-title'\fI\%ctrl+shift+alt+t\fP\X'tty: link'
.SS Window management
.INDENT 0.0
.TP
.B set_window_title
.UNINDENT
.sp
Change the title of the active window interactively, by typing in the new title.
.sp
If you specify an argument to this action then that is used as the title instead of asking for it.
Use the empty string (\(dq\(dq) to reset the title to default. Use a space (\(dq \(dq) to indicate that the
prompt should not be pre\-filled. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# interactive usage
map f1 set_window_title
# set a specific title
map f2 set_window_title some title
# reset to default
map f3 set_window_title \(dq\(dq
# interactive usage without prefilled prompt
map f3 set_window_title \(dq \(dq
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B close_other_windows_in_tab
.UNINDENT
.sp
Close all windows in the tab other than the currently active window
.INDENT 0.0
.TP
.B eighth_window
.UNINDENT
.sp
Focus the eighth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Eighth-window'\fI\%ctrl+shift+8\fP\X'tty: link'
.INDENT 0.0
.TP
.B fifth_window
.UNINDENT
.sp
Focus the fifth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Fifth-window'\fI\%ctrl+shift+5\fP\X'tty: link'
.INDENT 0.0
.TP
.B first_window
.UNINDENT
.sp
Focus the first window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.First-window'\fI\%ctrl+shift+1\fP\X'tty: link'
.INDENT 0.0
.TP
.B focus_visible_window
.UNINDENT
.sp
Focus a visible window by pressing the number of the window. Window numbers are displayed
.sp
over the windows for easy selection in this mode. See \X'tty: link #opt-kitty.visual_window_select_characters'\fI\%visual_window_select_characters\fP\X'tty: link'\&.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Visually-select-and-focus-window'\fI\%ctrl+shift+f7\fP\X'tty: link'
.INDENT 0.0
.TP
.B fourth_window
.UNINDENT
.sp
Focus the fourth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Fourth-window'\fI\%ctrl+shift+4\fP\X'tty: link'
.INDENT 0.0
.TP
.B move_window
.UNINDENT
.sp
Move the window in the specified direction
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+left move_window left
map ctrl+down move_window bottom
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B move_window_backward
.UNINDENT
.sp
Move active window backward (swap it with the previous window)
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Move-window-backward'\fI\%ctrl+shift+b\fP\X'tty: link'
.INDENT 0.0
.TP
.B move_window_forward
.UNINDENT
.sp
Move active window forward (swap it with the next window)
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Move-window-forward'\fI\%ctrl+shift+f\fP\X'tty: link'
.INDENT 0.0
.TP
.B move_window_to_top
.UNINDENT
.sp
Move active window to the top (make it the first window)
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Move-window-to-top'\fI\%ctrl+shift+\(ga\fP\X'tty: link'
.INDENT 0.0
.TP
.B neighboring_window
.UNINDENT
.sp
Focus the neighboring window in the current tab
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map ctrl+left neighboring_window left
map ctrl+down neighboring_window bottom
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B next_window
.UNINDENT
.sp
Focus the next window in the current tab
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Next-window'\fI\%ctrl+shift+]\fP\X'tty: link'
.INDENT 0.0
.TP
.B ninth_window
.UNINDENT
.sp
Focus the ninth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Ninth-window'\fI\%ctrl+shift+9\fP\X'tty: link'
.INDENT 0.0
.TP
.B nth_window
.UNINDENT
.sp
Focus the nth window if positive or the previously active windows if negative. When the number is larger
.sp
than the number of windows focus the last window. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# focus the previously active window
map ctrl+p nth_window \-1
# focus the first window
map ctrl+1 nth_window 0
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B previous_window
.UNINDENT
.sp
Focus the previous window in the current tab
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Previous-window'\fI\%ctrl+shift+[\fP\X'tty: link'
.INDENT 0.0
.TP
.B reset_window_sizes
.UNINDENT
.sp
Reset window sizes undoing any dynamic resizing of windows
.INDENT 0.0
.TP
.B resize_window
.UNINDENT
.sp
Resize the active window by the specified amount
.sp
See \X'tty: link #window-resizing'\fI\%Resizing windows\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B second_window
.UNINDENT
.sp
Focus the second window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Second-window'\fI\%ctrl+shift+2\fP\X'tty: link'
.INDENT 0.0
.TP
.B seventh_window
.UNINDENT
.sp
Focus the seventh window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Seventh-window'\fI\%ctrl+shift+7\fP\X'tty: link'
.INDENT 0.0
.TP
.B sixth_window
.UNINDENT
.sp
Focus the sixth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Sixth-window'\fI\%ctrl+shift+6\fP\X'tty: link'
.INDENT 0.0
.TP
.B swap_with_window
.UNINDENT
.sp
Swap the current window with another window in the current tab, selected visually. See \X'tty: link #opt-kitty.visual_window_select_characters'\fI\%visual_window_select_characters\fP\X'tty: link'
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Visually-swap-window-with-another'\fI\%ctrl+shift+f8\fP\X'tty: link'
.INDENT 0.0
.TP
.B tenth_window
.UNINDENT
.sp
Focus the tenth window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Tenth-window'\fI\%ctrl+shift+0\fP\X'tty: link'
.INDENT 0.0
.TP
.B third_window
.UNINDENT
.sp
Focus the third window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Third-window'\fI\%ctrl+shift+3\fP\X'tty: link'
.INDENT 0.0
.TP
.B change_font_size
.UNINDENT
.sp
Change the font size for the current or all OS Windows
.sp
See \X'tty: link #conf-kitty-shortcuts-fonts'\fI\%Font sizes\fP\X'tty: link' for details.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Decrease-font-size'\fI\%ctrl+shift+minus\fP\X'tty: link', \X'tty: link #shortcut-kitty.Increase-font-size'\fI\%ctrl+shift+equal\fP\X'tty: link', \X'tty: link #shortcut-kitty.Reset-font-size'\fI\%ctrl+shift+backspace\fP\X'tty: link'
.INDENT 0.0
.TP
.B close_os_window
.UNINDENT
.sp
Close the currently active OS Window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Close-OS-window'\fI\%shift+cmd+w\fP\X'tty: link'
.INDENT 0.0
.TP
.B close_other_os_windows
.UNINDENT
.sp
Close all other OS Windows other than the OS Window containing the currently active window
.INDENT 0.0
.TP
.B close_window
.UNINDENT
.sp
Close the currently active window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Close-window'\fI\%ctrl+shift+w\fP\X'tty: link'
.INDENT 0.0
.TP
.B close_window_with_confirmation
.UNINDENT
.sp
Close window with confirmation
.sp
Asks for confirmation before closing the window. If you don\(aqt want the
confirmation when the window is sitting at a shell prompt
(requires \X'tty: link #shell-integration'\fI\%Shell integration\fP\X'tty: link'), use:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 close_window_with_confirmation ignore\-shell
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B detach_window
.UNINDENT
.sp
Detach a window, moving it to another tab or OS Window
.sp
See \X'tty: link #detach-window'\fI\%detaching windows\fP\X'tty: link' for details.
.INDENT 0.0
.TP
.B new_os_window
.UNINDENT
.sp
New OS Window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.New-OS-window'\fI\%ctrl+shift+n\fP\X'tty: link'
.INDENT 0.0
.TP
.B new_os_window_with_cwd
.UNINDENT
.sp
New OS Window with the same working directory as the currently active window
.INDENT 0.0
.TP
.B new_window
.UNINDENT
.sp
Create a new window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.New-window'\fI\%ctrl+shift+enter\fP\X'tty: link'
.INDENT 0.0
.TP
.B new_window_with_cwd
.UNINDENT
.sp
Create a new window with working directory same as that of the active window
.INDENT 0.0
.TP
.B nth_os_window
.UNINDENT
.sp
Focus the nth OS window if positive or the previously active OS windows if negative. When the number is larger
.sp
than the number of OS windows focus the last OS window. A value of zero will refocus the currently focused OS window,
this is useful if focus is not on any kitty OS window at all, however, it will only work if the window manager
allows applications to grab focus. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
# focus the previously active kitty OS window
map ctrl+p nth_os_window \-1
# focus the current kitty OS window (grab focus)
map ctrl+0 nth_os_window 0
# focus the first kitty OS window
map ctrl+1 nth_os_window 1
# focus the last kitty OS window
map ctrl+1 nth_os_window 999
.EE
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B quit
.UNINDENT
.sp
Quit, closing all windows
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Quit-kitty'\fI\%cmd+q\fP\X'tty: link'
.INDENT 0.0
.TP
.B set_background_opacity
.UNINDENT
.sp
Set the background opacity for the active OS Window
.sp
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 set_background_opacity +0.1
map f2 set_background_opacity \-0.1
map f3 set_background_opacity 0.5
.EE
.UNINDENT
.UNINDENT
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Decrease-background-opacity'\fI\%ctrl+shift+a>l\fP\X'tty: link', \X'tty: link #shortcut-kitty.Make-background-fully-opaque'\fI\%ctrl+shift+a>1\fP\X'tty: link', \X'tty: link #shortcut-kitty.Increase-background-opacity'\fI\%ctrl+shift+a>m\fP\X'tty: link', \X'tty: link #shortcut-kitty.Reset-background-opacity'\fI\%ctrl+shift+a>d\fP\X'tty: link'
.INDENT 0.0
.TP
.B start_resizing_window
.UNINDENT
.sp
Resize the active window interactively
.sp
See \X'tty: link #window-resizing'\fI\%Resizing windows\fP\X'tty: link' for details.
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Start-resizing-window'\fI\%ctrl+shift+r\fP\X'tty: link'
.INDENT 0.0
.TP
.B toggle_fullscreen
.UNINDENT
.sp
Toggle the fullscreen status of the active OS Window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Toggle-fullscreen'\fI\%ctrl+shift+f11\fP\X'tty: link'
.INDENT 0.0
.TP
.B toggle_maximized
.UNINDENT
.sp
Toggle the maximized status of the active OS Window
.sp
Default shortcuts using this action:
\X'tty: link #shortcut-kitty.Toggle-maximized'\fI\%ctrl+shift+f10\fP\X'tty: link'
.INDENT 0.0
.TP
.B toggle_tab
.UNINDENT
.sp
Toggle to the tab matching the specified expression
.sp
Switches to the matching tab if another tab is current, otherwise
switches to the last used tab. Useful to easily switch to and back from a
tab using a single shortcut. Note that toggling works only between
tabs in the same OS window. See \X'tty: link #search-syntax'\fI\%Matching windows and tabs\fP\X'tty: link' for details
on the match expression. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
map f1 toggle_tab title:mytab
.EE
.UNINDENT
.UNINDENT
.SH Author

Kovid Goyal
.SH Copyright

2024, Kovid Goyal
.\" Generated by docutils manpage writer.
.
