.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "kitten-transfer" 1 "Jun 22, 2024" "0.35.2" "kitty"
.SH Name
kitten-transfer \- Transfer files easily over the TTY device
.SH Overview
.sp
Added in version 0.30.0.

.sp
Transfer files to and from remote computers over the \fBTTY\fP device itself.
This means that file transfer works over nested SSH sessions, serial links,
etc. Anywhere you have a terminal device, you can transfer files.
.sp
This kitten supports transferring entire directory trees, preserving soft and
hard links, file permissions, times, etc. It even supports the \X'tty: link https://en.wikipedia.org/wiki/Rsync'\fI\%rsync\fP\X'tty: link' protocol
to transfer only changes to large files.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
See the \fI\%Remote files\fP kitten
.UNINDENT
.UNINDENT
.SH Basic usage
.sp
Simply ssh into a remote computer using the \fI\%ssh kitten\fP and run the this kitten
(which the ssh kitten makes available for you on the remote computer
automatically). Some illustrative examples are below. To copy a file from a
remote computer:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
<local computer>  $ kitten ssh my\-remote\-computer
<remote computer> $ kitten transfer some\-file /path/on/local/computer
.EE
.UNINDENT
.UNINDENT
.sp
This, will copy \fBsome\-file\fP from the computer into which you have SSHed
to your local computer at \fB/path/on/local/computer\fP\&. kitty will ask you
for confirmation before allowing the transfer, so that the file transfer
protocol cannot be abused to read/write files on your computer.
.sp
To copy a file from your local computer to the remote computer:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
<local computer>  $ kitten ssh my\-remote\-computer
<remote computer> $ kitten transfer \-\-direction=upload /path/on/local/computer remote\-file
.EE
.UNINDENT
.UNINDENT
.sp
For more detailed usage examples, see the command line interface section below.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you dont want to use the ssh kitten, you can install the kitten binary on
the remote machine yourself, it is a standalone, statically compiled binary
available from the \X'tty: link https://github.com/kovidgoyal/kitty/releases'\fI\%kitty releases page\fP\X'tty: link'\&. Or you can write your own
script/program to use the underlying \fI\%file transfer protocol\fP\&.
.UNINDENT
.UNINDENT
.SH Avoiding the confirmation prompt
.sp
Normally, when you start a file transfer kitty will prompt you for confirmation.
This is to ensure that hostile programs running on a remote machine cannot
read/write files on your computer without your permission. If the remote machine
is trusted, then you can disable the confirmation prompt by:
.INDENT 0.0
.IP 1. 3
Setting the \X'tty: link #opt-kitty.file_transfer_confirmation_bypass'\fI\%file_transfer_confirmation_bypass\fP\X'tty: link' option to some password.
.IP 2. 3
When invoking the kitten use the \fI\%\-\-permissions\-bypass\fP to supply the password you set
in step one.
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Using a password to bypass confirmation means any software running
on the remote machine could potentially learn that password and use it to
gain full access to your computer.
.UNINDENT
.UNINDENT
.SH Delta transfers
.sp
This kitten has the ability to use the \X'tty: link https://en.wikipedia.org/wiki/Rsync'\fI\%rsync\fP\X'tty: link' protocol to only transfer the
differences between files. To turn it on use the \fI\%\-\-transmit\-deltas\fP option. Note that this will
actually be slower when transferring small files or on a very fast network, because
of round trip overhead, so use with care.
.SH Source code for transfer
.sp
The source code for this kitten is \X'tty: link https://github.com/kovidgoyal/kitty/tree/master/kittens/transfer'\fI\%available on GitHub\fP\X'tty: link'\&.
.SH Command line interface
.INDENT 0.0
.INDENT 3.5
.sp
.EX
kitty +kitten transfer [options] source_files_or_directories destination_path
.EE
.UNINDENT
.UNINDENT
.sp
Transfer files over the TTY device. Can be used to send files between any two
computers provided there is a TTY connection between them, such as over SSH.
Supports copying files, directories (recursively), symlinks and hardlinks.  Can
even use an rsync like protocol to copy only changes between files.  When
copying multiple files, use the \-\-confirm\-paths option to see what exactly will
be copied. The easiest way to use this kitten is to first ssh into the remote
computer with the ssh kitten:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitten ssh my\-remote\-computer
.EE
.UNINDENT
.UNINDENT
.sp
Then, on the remote computer run the transfer kitten to do your copying.
To copy a file from the remote computer to the local computer, run:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitten transfer remote\-file /path/to/local\-file
.EE
.UNINDENT
.UNINDENT
.sp
This will copy \fBremote\-file\fP from the remote computer to \fB/path/to/local\-file\fP
on the local computer.
.sp
Similarly, to copy a file from the local computer to the remote one, run:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitten transfer \-\-direction=upload /path/to/local\-file remote\-file
.EE
.UNINDENT
.UNINDENT
.sp
This will copy \fB/path/to/local\-file\fP from the local computer
to \fBremote\-file\fP on the remote computer.
.sp
Multiple files can be copied:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitten transfer file1 file2 /path/to/dir/
.EE
.UNINDENT
.UNINDENT
.sp
This will put \fBfile1\fP and \fBfile2\fP into the directory
\fB/path/to/dir/\fP on the local computer.
.sp
Directories can also be copied, recursively:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
$ kitten transfer dir1 /path/to/dir/
.EE
.UNINDENT
.UNINDENT
.sp
This will put \fBdir1\fP and all its contents into
\fB/path/to/dir/\fP on the local computer.
.sp
Note that when copying multiple files or directories, the destination
must be an existing directory on the receiving computer. Relative file
paths are resolved with respect to the current directory on the computer
running the kitten and the home directory on the other computer. It is
a good idea to use the \fI\%\-\-confirm\-paths\fP command line flag to verify
the kitten will copy the files you expect it to.
.SS Options
.INDENT 0.0
.TP
.B \-\-direction <DIRECTION>, \-d <DIRECTION>
Whether to send or receive files. \fBsend\fP or \fBdownload\fP copy files from the computer on which the kitten is running (usually the remote computer) to the local computer. \fBreceive\fP or \fBupload\fP copy files from the local computer to the remote computer.
Default: \fBdownload\fP
Choices: \fBdownload\fP, \fBreceive\fP, \fBsend\fP, \fBupload\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-mode <MODE>, \-m <MODE>
How to interpret command line arguments. In \fBmirror\fP mode all arguments are assumed to be files/dirs on the sending computer and they are mirrored onto the receiving computer. Files under the HOME directory are copied to the HOME directory on the receiving computer even if the HOME directory is different. In \fBnormal\fP mode the last argument is assumed to be a destination path on the receiving computer. The last argument must be an existing directory unless copying a single file. When it is a directory it should end with a trailing slash.
Default: \fBnormal\fP
Choices: \fBmirror\fP, \fBnormal\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-compress <COMPRESS>
Whether to compress data being sent. By default compression is enabled based on the type of file being sent. For files recognized as being already compressed, compression is turned off as it just wastes CPU cycles.
Default: \fBauto\fP
Choices: \fBalways\fP, \fBauto\fP, \fBnever\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-permissions\-bypass <PERMISSIONS_BYPASS>, \-p <PERMISSIONS_BYPASS>
The password to use to skip the transfer confirmation popup in kitty. Must match the password set for the \X'tty: link #opt-kitty.file_transfer_confirmation_bypass'\fI\%file_transfer_confirmation_bypass\fP\X'tty: link' option in \fBkitty.conf\fP\&. Note that leading and trailing whitespace is removed from the password. A password starting with \fB\&.\fP, \fB/\fP or \fB~\fP characters is assumed to be a file name to read the password from. A value of \fB\-\fP means read the password from STDIN. A password that is purely a number less than 256 is assumed to be the number of a file descriptor from which to read the actual password.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-confirm\-paths, \-c
Before actually transferring files, show a mapping of local file names to remote file names and ask for confirmation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-transmit\-deltas, \-x
If a file on the receiving side already exists, use the rsync algorithm to update it to match the file on the sending side, potentially saving lots of bandwidth and also automatically resuming partial transfers. Note that this will actually degrade performance on fast links or with small files, so use with care.
.UNINDENT
.SH Author

Kovid Goyal
.SH Copyright

2024, Kovid Goyal
.\" Generated by docutils manpage writer.
.
